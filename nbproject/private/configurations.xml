<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="88">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="AR">
      <df name="AR">
        <df name="en.lproj">
        </df>
        <in>AppDelegate.h</in>
        <in>AppDelegate.mm</in>
        <in>ViewController.h</in>
        <in>ViewController.mm</in>
        <in>main.m</in>
      </df>
      <df name="AR.xcodeproj">
        <df name="project.xcworkspace">
          <df name="xcuserdata">
            <df name="Administrator.xcuserdatad">
              <df name="xcdebugger">
              </df>
            </df>
          </df>
        </df>
        <df name="xcuserdata">
          <df name="Administrator.xcuserdatad">
            <df name="xcdebugger">
            </df>
            <df name="xcschemes">
            </df>
          </df>
        </df>
      </df>
      <df name="Framework">
        <df name="ArucoUtils">
          <in>cameraparameters.cpp</in>
          <in>cameraparameters.h</in>
        </df>
        <df name="iOSConnectors">
          <in>CameraFrameSource.h</in>
          <in>CameraFrameSource.mm</in>
          <in>PipeOutputConnector.cpp</in>
          <in>PipeOutputConnector.h</in>
        </df>
        <df name="Model">
          <in>BaseFrameContainer.cpp</in>
          <in>BaseFrameContainer.h</in>
          <in>BaseFrameSource.cpp</in>
          <in>BaseFrameSource.h</in>
          <in>BasePipe.cpp</in>
          <in>BasePipe.h</in>
          <in>BasePipeOutput.cpp</in>
          <in>BasePipeOutput.h</in>
          <in>Frame.cpp</in>
          <in>Frame.h</in>
          <in>Marker.cpp</in>
          <in>Marker.h</in>
          <in>PipeLine.cpp</in>
          <in>PipeLine.h</in>
          <in>PipeMerge.cpp</in>
          <in>PipeMerge.h</in>
          <in>Shapes.cpp</in>
          <in>Shapes.h</in>
        </df>
        <df name="Pipes">
          <df name="Basic">
            <in>PolarRotate.cpp</in>
            <in>PolarRotate.h</in>
          </df>
          <df name="CameraApply">
            <in>CameraApply.cpp</in>
            <in>CameraApply.h</in>
          </df>
          <df name="Detectors">
            <in>SquareMarkerDetector.cpp</in>
            <in>SquareMarkerDetector.h</in>
          </df>
          <df name="Drawers">
            <in>DrawContrours.cpp</in>
            <in>DrawContrours.h</in>
          </df>
          <df name="Effects">
            <in>BlackAndWhite.cpp</in>
            <in>BlackAndWhite.h</in>
            <in>Blur.cpp</in>
            <in>Blur.h</in>
            <in>Canny.cpp</in>
            <in>Canny.h</in>
            <in>Threshold.cpp</in>
            <in>Threshold.h</in>
          </df>
          <df name="MarkerIdentifiers">
            <in>FiducidalMarkerIdentifier.cpp</in>
            <in>FiducidalMarkerIdentifier.h</in>
          </df>
          <df name="Recognizers">
            <in>DetectPolygons.cpp</in>
            <in>DetectPolygons.h</in>
            <in>FindContours.cpp</in>
            <in>FindContours.h</in>
          </df>
        </df>
        <df name="UI">
          <in>BaseArView.h</in>
          <in>BaseArView.mm</in>
          <in>GLRenderer.h</in>
          <in>GLRenderer.mm</in>
          <in>GLView.h</in>
          <in>GLView.mm</in>
        </df>
        <in>ArPipeFramework.h</in>
        <in>ArPipeObjcUtils.h</in>
      </df>
      <df name="OpenCV">
        <df name="3rdparty">
          <df name="ffmpeg">
            <in>ffopencv.c</in>
          </df>
          <df name="include">
            <df name="dshow">
              <in>_mingw_dxhelper.h</in>
              <in>_mingw_unicode.h</in>
              <in>amvideo.h</in>
              <in>audevcod.h</in>
              <in>bdatypes.h</in>
              <in>control.h</in>
              <in>ddraw.h</in>
              <in>dshow.h</in>
              <in>dsound.h</in>
              <in>dvdmedia.h</in>
              <in>errors.h</in>
              <in>evcode.h</in>
              <in>ksuuids.h</in>
              <in>strmif.h</in>
              <in>uuids.h</in>
            </df>
            <df name="ffmpeg_">
              <df name="libavcodec">
                <in>avcodec.h</in>
                <in>avfft.h</in>
                <in>dxva2.h</in>
                <in>opt.h</in>
                <in>vaapi.h</in>
                <in>vda.h</in>
                <in>vdpau.h</in>
                <in>version.h</in>
                <in>xvmc.h</in>
              </df>
              <df name="libavdevice">
                <in>avdevice.h</in>
              </df>
              <df name="libavformat">
                <in>avformat.h</in>
                <in>avio.h</in>
                <in>version.h</in>
              </df>
              <df name="libavutil">
                <in>adler32.h</in>
                <in>aes.h</in>
                <in>attributes.h</in>
                <in>audioconvert.h</in>
                <in>avassert.h</in>
                <in>avconfig.h</in>
                <in>avstring.h</in>
                <in>avutil.h</in>
                <in>base64.h</in>
                <in>bswap.h</in>
                <in>common.h</in>
                <in>cpu.h</in>
                <in>crc.h</in>
                <in>dict.h</in>
                <in>error.h</in>
                <in>eval.h</in>
                <in>fifo.h</in>
                <in>file.h</in>
                <in>imgutils.h</in>
                <in>intfloat.h</in>
                <in>intfloat_readwrite.h</in>
                <in>intreadwrite.h</in>
                <in>lfg.h</in>
                <in>log.h</in>
                <in>lzo.h</in>
                <in>mathematics.h</in>
                <in>md5.h</in>
                <in>mem.h</in>
                <in>opt.h</in>
                <in>parseutils.h</in>
                <in>pixdesc.h</in>
                <in>pixfmt.h</in>
                <in>random_seed.h</in>
                <in>rational.h</in>
                <in>samplefmt.h</in>
                <in>sha.h</in>
                <in>sha1.h</in>
              </df>
              <df name="libswscale">
                <in>swscale.h</in>
              </df>
            </df>
            <in>MultiMon.h</in>
            <in>msc_inttypes.h</in>
            <in>msc_stdint.h</in>
          </df>
          <df name="lib">
            <df name="armeabi">
            </df>
            <df name="armeabi-v7a">
            </df>
            <df name="mips">
            </df>
            <df name="x86">
            </df>
          </df>
          <df name="libjasper">
            <df name="jasper">
              <in>jas_cm.h</in>
              <in>jas_config.h</in>
              <in>jas_config2.h</in>
              <in>jas_debug.h</in>
              <in>jas_fix.h</in>
              <in>jas_getopt.h</in>
              <in>jas_icc.h</in>
              <in>jas_image.h</in>
              <in>jas_init.h</in>
              <in>jas_malloc.h</in>
              <in>jas_math.h</in>
              <in>jas_seq.h</in>
              <in>jas_stream.h</in>
              <in>jas_string.h</in>
              <in>jas_tmr.h</in>
              <in>jas_tvp.h</in>
              <in>jas_types.h</in>
              <in>jas_version.h</in>
              <in>jasper.h</in>
            </df>
            <in>jas_cm.c</in>
            <in>jas_debug.c</in>
            <in>jas_getopt.c</in>
            <in>jas_icc.c</in>
            <in>jas_iccdata.c</in>
            <in>jas_image.c</in>
            <in>jas_init.c</in>
            <in>jas_malloc.c</in>
            <in>jas_seq.c</in>
            <in>jas_stream.c</in>
            <in>jas_string.c</in>
            <in>jas_tmr.c</in>
            <in>jas_tvp.c</in>
            <in>jas_version.c</in>
            <in>jp2_cod.c</in>
            <in>jp2_cod.h</in>
            <in>jp2_dec.c</in>
            <in>jp2_dec.h</in>
            <in>jp2_enc.c</in>
            <in>jpc_bs.c</in>
            <in>jpc_bs.h</in>
            <in>jpc_cod.h</in>
            <in>jpc_cs.c</in>
            <in>jpc_cs.h</in>
            <in>jpc_dec.c</in>
            <in>jpc_dec.h</in>
            <in>jpc_enc.c</in>
            <in>jpc_enc.h</in>
            <in>jpc_fix.h</in>
            <in>jpc_flt.h</in>
            <in>jpc_math.c</in>
            <in>jpc_math.h</in>
            <in>jpc_mct.c</in>
            <in>jpc_mct.h</in>
            <in>jpc_mqcod.c</in>
            <in>jpc_mqcod.h</in>
            <in>jpc_mqdec.c</in>
            <in>jpc_mqdec.h</in>
            <in>jpc_mqenc.c</in>
            <in>jpc_mqenc.h</in>
            <in>jpc_qmfb.c</in>
            <in>jpc_qmfb.h</in>
            <in>jpc_t1cod.c</in>
            <in>jpc_t1cod.h</in>
            <in>jpc_t1dec.c</in>
            <in>jpc_t1dec.h</in>
            <in>jpc_t1enc.c</in>
            <in>jpc_t1enc.h</in>
            <in>jpc_t2cod.c</in>
            <in>jpc_t2cod.h</in>
            <in>jpc_t2dec.c</in>
            <in>jpc_t2dec.h</in>
            <in>jpc_t2enc.c</in>
            <in>jpc_t2enc.h</in>
            <in>jpc_tagtree.c</in>
            <in>jpc_tagtree.h</in>
            <in>jpc_tsfb.c</in>
            <in>jpc_tsfb.h</in>
            <in>jpc_util.c</in>
            <in>jpc_util.h</in>
          </df>
          <df name="libjpeg">
            <in>jaricom.c</in>
            <in>jcapimin.c</in>
            <in>jcapistd.c</in>
            <in>jcarith.c</in>
            <in>jccoefct.c</in>
            <in>jccolor.c</in>
            <in>jcdctmgr.c</in>
            <in>jchuff.c</in>
            <in>jcinit.c</in>
            <in>jcmainct.c</in>
            <in>jcmarker.c</in>
            <in>jcmaster.c</in>
            <in>jcomapi.c</in>
            <in>jconfig.h</in>
            <in>jcparam.c</in>
            <in>jcprepct.c</in>
            <in>jcsample.c</in>
            <in>jctrans.c</in>
            <in>jdapimin.c</in>
            <in>jdapistd.c</in>
            <in>jdarith.c</in>
            <in>jdatadst.c</in>
            <in>jdatasrc.c</in>
            <in>jdcoefct.c</in>
            <in>jdcolor.c</in>
            <in>jdct.h</in>
            <in>jddctmgr.c</in>
            <in>jdhuff.c</in>
            <in>jdinput.c</in>
            <in>jdmainct.c</in>
            <in>jdmarker.c</in>
            <in>jdmaster.c</in>
            <in>jdmerge.c</in>
            <in>jdpostct.c</in>
            <in>jdsample.c</in>
            <in>jdtrans.c</in>
            <in>jerror.c</in>
            <in>jerror.h</in>
            <in>jfdctflt.c</in>
            <in>jfdctfst.c</in>
            <in>jfdctint.c</in>
            <in>jidctflt.c</in>
            <in>jidctfst.c</in>
            <in>jidctint.c</in>
            <in>jinclude.h</in>
            <in>jmemansi.c</in>
            <in>jmemmgr.c</in>
            <in>jmemnobs.c</in>
            <in>jmemsys.h</in>
            <in>jmorecfg.h</in>
            <in>jpegint.h</in>
            <in>jpeglib.h</in>
            <in>jquant1.c</in>
            <in>jquant2.c</in>
            <in>jutils.c</in>
            <in>jversion.h</in>
          </df>
          <df name="libpng">
            <df name="arm">
              <in>filter_neon.S</in>
            </df>
            <in>png.c</in>
            <in>png.h</in>
            <in>pngconf.h</in>
            <in>pngdebug.h</in>
            <in>pngerror.c</in>
            <in>pngget.c</in>
            <in>pnginfo.h</in>
            <in>pnglibconf.h</in>
            <in>pngmem.c</in>
            <in>pngpread.c</in>
            <in>pngpriv.h</in>
            <in>pngread.c</in>
            <in>pngrio.c</in>
            <in>pngrtran.c</in>
            <in>pngrutil.c</in>
            <in>pngset.c</in>
            <in>pngstruct.h</in>
            <in>pngtrans.c</in>
            <in>pngwio.c</in>
            <in>pngwrite.c</in>
            <in>pngwtran.c</in>
            <in>pngwutil.c</in>
          </df>
          <df name="libtiff">
            <in>t4.h</in>
            <in>tif_aux.c</in>
            <in>tif_close.c</in>
            <in>tif_codec.c</in>
            <in>tif_color.c</in>
            <in>tif_compress.c</in>
            <in>tif_dir.c</in>
            <in>tif_dir.h</in>
            <in>tif_dirinfo.c</in>
            <in>tif_dirread.c</in>
            <in>tif_dirwrite.c</in>
            <in>tif_dumpmode.c</in>
            <in>tif_error.c</in>
            <in>tif_extension.c</in>
            <in>tif_fax3.c</in>
            <in>tif_fax3.h</in>
            <in>tif_fax3sm.c</in>
            <in>tif_flush.c</in>
            <in>tif_getimage.c</in>
            <in>tif_jbig.c</in>
            <in>tif_jpeg.c</in>
            <in>tif_jpeg_12.c</in>
            <in>tif_luv.c</in>
            <in>tif_lzma.c</in>
            <in>tif_lzw.c</in>
            <in>tif_next.c</in>
            <in>tif_ojpeg.c</in>
            <in>tif_open.c</in>
            <in>tif_packbits.c</in>
            <in>tif_pixarlog.c</in>
            <in>tif_predict.c</in>
            <in>tif_predict.h</in>
            <in>tif_print.c</in>
            <in>tif_read.c</in>
            <in>tif_stream.cxx</in>
            <in>tif_strip.c</in>
            <in>tif_swab.c</in>
            <in>tif_thunder.c</in>
            <in>tif_tile.c</in>
            <in>tif_unix.c</in>
            <in>tif_version.c</in>
            <in>tif_warning.c</in>
            <in>tif_win32.c</in>
            <in>tif_write.c</in>
            <in>tif_zip.c</in>
            <in>tiff.h</in>
            <in>tiffio.h</in>
            <in>tiffio.hxx</in>
            <in>tiffiop.h</in>
            <in>tiffvers.h</in>
            <in>uvcode.h</in>
          </df>
          <df name="libwebp">
            <df name="cpu-features">
              <in>cpu-features.c</in>
              <in>cpu-features.h</in>
            </df>
            <df name="dec">
              <in>alpha.c</in>
              <in>buffer.c</in>
              <in>decode_vp8.h</in>
              <in>frame.c</in>
              <in>idec.c</in>
              <in>io.c</in>
              <in>layer.c</in>
              <in>quant.c</in>
              <in>tree.c</in>
              <in>vp8.c</in>
              <in>vp8i.h</in>
              <in>vp8l.c</in>
              <in>vp8li.h</in>
              <in>webp.c</in>
              <in>webpi.h</in>
            </df>
            <df name="dsp">
              <in>cpu.c</in>
              <in>dec.c</in>
              <in>dec_neon.c</in>
              <in>dec_sse2.c</in>
              <in>dsp.h</in>
              <in>enc.c</in>
              <in>enc_sse2.c</in>
              <in>lossless.c</in>
              <in>lossless.h</in>
              <in>upsampling.c</in>
              <in>upsampling_sse2.c</in>
              <in>yuv.c</in>
              <in>yuv.h</in>
            </df>
            <df name="enc">
              <in>alpha.c</in>
              <in>analysis.c</in>
              <in>backward_references.c</in>
              <in>backward_references.h</in>
              <in>config.c</in>
              <in>cost.c</in>
              <in>cost.h</in>
              <in>filter.c</in>
              <in>frame.c</in>
              <in>histogram.c</in>
              <in>histogram.h</in>
              <in>iterator.c</in>
              <in>layer.c</in>
              <in>picture.c</in>
              <in>quant.c</in>
              <in>syntax.c</in>
              <in>tree.c</in>
              <in>vp8enci.h</in>
              <in>vp8l.c</in>
              <in>vp8li.h</in>
              <in>webpenc.c</in>
            </df>
            <df name="mux">
              <in>demux.c</in>
              <in>muxedit.c</in>
              <in>muxi.h</in>
              <in>muxinternal.c</in>
              <in>muxread.c</in>
            </df>
            <df name="utils">
              <in>bit_reader.c</in>
              <in>bit_reader.h</in>
              <in>bit_writer.c</in>
              <in>bit_writer.h</in>
              <in>color_cache.c</in>
              <in>color_cache.h</in>
              <in>filters.c</in>
              <in>filters.h</in>
              <in>huffman.c</in>
              <in>huffman.h</in>
              <in>huffman_encode.c</in>
              <in>huffman_encode.h</in>
              <in>quant_levels.c</in>
              <in>quant_levels.h</in>
              <in>rescaler.c</in>
              <in>rescaler.h</in>
              <in>thread.c</in>
              <in>thread.h</in>
              <in>utils.c</in>
              <in>utils.h</in>
            </df>
            <df name="webp">
              <in>decode.h</in>
              <in>encode.h</in>
              <in>format_constants.h</in>
              <in>mux.h</in>
              <in>types.h</in>
            </df>
          </df>
          <df name="openexr">
            <df name="Half">
              <in>eLut.cpp</in>
              <in>eLut.h</in>
              <in>half.cpp</in>
              <in>half.h</in>
              <in>halfFunction.h</in>
              <in>halfLimits.h</in>
              <in>toFloat.cpp</in>
              <in>toFloat.h</in>
            </df>
            <df name="Iex">
              <in>Iex.h</in>
              <in>IexBaseExc.cpp</in>
              <in>IexBaseExc.h</in>
              <in>IexErrnoExc.h</in>
              <in>IexMacros.h</in>
              <in>IexMathExc.h</in>
              <in>IexThrowErrnoExc.cpp</in>
              <in>IexThrowErrnoExc.h</in>
            </df>
            <df name="IlmImf">
              <in>ImfAcesFile.cpp</in>
              <in>ImfAcesFile.h</in>
              <in>ImfArray.h</in>
              <in>ImfAttribute.cpp</in>
              <in>ImfAttribute.h</in>
              <in>ImfAutoArray.h</in>
              <in>ImfB44Compressor.cpp</in>
              <in>ImfB44Compressor.h</in>
              <in>ImfBoxAttribute.cpp</in>
              <in>ImfBoxAttribute.h</in>
              <in>ImfCRgbaFile.cpp</in>
              <in>ImfCRgbaFile.h</in>
              <in>ImfChannelList.cpp</in>
              <in>ImfChannelList.h</in>
              <in>ImfChannelListAttribute.cpp</in>
              <in>ImfChannelListAttribute.h</in>
              <in>ImfCheckedArithmetic.h</in>
              <in>ImfChromaticities.cpp</in>
              <in>ImfChromaticities.h</in>
              <in>ImfChromaticitiesAttribute.cpp</in>
              <in>ImfChromaticitiesAttribute.h</in>
              <in>ImfCompression.h</in>
              <in>ImfCompressionAttribute.cpp</in>
              <in>ImfCompressionAttribute.h</in>
              <in>ImfCompressor.cpp</in>
              <in>ImfCompressor.h</in>
              <in>ImfConvert.cpp</in>
              <in>ImfConvert.h</in>
              <in>ImfDoubleAttribute.cpp</in>
              <in>ImfDoubleAttribute.h</in>
              <in>ImfEnvmap.cpp</in>
              <in>ImfEnvmap.h</in>
              <in>ImfEnvmapAttribute.cpp</in>
              <in>ImfEnvmapAttribute.h</in>
              <in>ImfFloatAttribute.cpp</in>
              <in>ImfFloatAttribute.h</in>
              <in>ImfFrameBuffer.cpp</in>
              <in>ImfFrameBuffer.h</in>
              <in>ImfFramesPerSecond.cpp</in>
              <in>ImfFramesPerSecond.h</in>
              <in>ImfHeader.cpp</in>
              <in>ImfHeader.h</in>
              <in>ImfHuf.cpp</in>
              <in>ImfHuf.h</in>
              <in>ImfIO.cpp</in>
              <in>ImfIO.h</in>
              <in>ImfInputFile.cpp</in>
              <in>ImfInputFile.h</in>
              <in>ImfInt64.h</in>
              <in>ImfIntAttribute.cpp</in>
              <in>ImfIntAttribute.h</in>
              <in>ImfKeyCode.cpp</in>
              <in>ImfKeyCode.h</in>
              <in>ImfKeyCodeAttribute.cpp</in>
              <in>ImfKeyCodeAttribute.h</in>
              <in>ImfLineOrder.h</in>
              <in>ImfLineOrderAttribute.cpp</in>
              <in>ImfLineOrderAttribute.h</in>
              <in>ImfLut.cpp</in>
              <in>ImfLut.h</in>
              <in>ImfMatrixAttribute.cpp</in>
              <in>ImfMatrixAttribute.h</in>
              <in>ImfMisc.cpp</in>
              <in>ImfMisc.h</in>
              <in>ImfMultiView.cpp</in>
              <in>ImfMultiView.h</in>
              <in>ImfName.h</in>
              <in>ImfOpaqueAttribute.cpp</in>
              <in>ImfOpaqueAttribute.h</in>
              <in>ImfOutputFile.cpp</in>
              <in>ImfOutputFile.h</in>
              <in>ImfPixelType.h</in>
              <in>ImfPizCompressor.cpp</in>
              <in>ImfPizCompressor.h</in>
              <in>ImfPreviewImage.cpp</in>
              <in>ImfPreviewImage.h</in>
              <in>ImfPreviewImageAttribute.cpp</in>
              <in>ImfPreviewImageAttribute.h</in>
              <in>ImfPxr24Compressor.cpp</in>
              <in>ImfPxr24Compressor.h</in>
              <in>ImfRational.cpp</in>
              <in>ImfRational.h</in>
              <in>ImfRationalAttribute.cpp</in>
              <in>ImfRationalAttribute.h</in>
              <in>ImfRgba.h</in>
              <in>ImfRgbaFile.cpp</in>
              <in>ImfRgbaFile.h</in>
              <in>ImfRgbaYca.cpp</in>
              <in>ImfRgbaYca.h</in>
              <in>ImfRleCompressor.cpp</in>
              <in>ImfRleCompressor.h</in>
              <in>ImfScanLineInputFile.cpp</in>
              <in>ImfScanLineInputFile.h</in>
              <in>ImfStandardAttributes.cpp</in>
              <in>ImfStandardAttributes.h</in>
              <in>ImfStdIO.cpp</in>
              <in>ImfStdIO.h</in>
              <in>ImfStringAttribute.cpp</in>
              <in>ImfStringAttribute.h</in>
              <in>ImfStringVectorAttribute.cpp</in>
              <in>ImfStringVectorAttribute.h</in>
              <in>ImfTestFile.cpp</in>
              <in>ImfTestFile.h</in>
              <in>ImfThreading.cpp</in>
              <in>ImfThreading.h</in>
              <in>ImfTileDescription.h</in>
              <in>ImfTileDescriptionAttribute.cpp</in>
              <in>ImfTileDescriptionAttribute.h</in>
              <in>ImfTileOffsets.cpp</in>
              <in>ImfTileOffsets.h</in>
              <in>ImfTiledInputFile.cpp</in>
              <in>ImfTiledInputFile.h</in>
              <in>ImfTiledMisc.cpp</in>
              <in>ImfTiledMisc.h</in>
              <in>ImfTiledOutputFile.cpp</in>
              <in>ImfTiledOutputFile.h</in>
              <in>ImfTiledRgbaFile.cpp</in>
              <in>ImfTiledRgbaFile.h</in>
              <in>ImfTimeCode.cpp</in>
              <in>ImfTimeCode.h</in>
              <in>ImfTimeCodeAttribute.cpp</in>
              <in>ImfTimeCodeAttribute.h</in>
              <in>ImfVecAttribute.cpp</in>
              <in>ImfVecAttribute.h</in>
              <in>ImfVersion.cpp</in>
              <in>ImfVersion.h</in>
              <in>ImfWav.cpp</in>
              <in>ImfWav.h</in>
              <in>ImfXdr.h</in>
              <in>ImfZipCompressor.cpp</in>
              <in>ImfZipCompressor.h</in>
              <in>b44ExpLogTable.cpp</in>
              <in>b44ExpLogTable.h</in>
            </df>
            <df name="IlmThread">
              <in>IlmThread.cpp</in>
              <in>IlmThread.h</in>
              <in>IlmThreadMutex.cpp</in>
              <in>IlmThreadMutex.h</in>
              <in>IlmThreadMutexPosix.cpp</in>
              <in>IlmThreadMutexWin32.cpp</in>
              <in>IlmThreadPool.cpp</in>
              <in>IlmThreadPool.h</in>
              <in>IlmThreadPosix.cpp</in>
              <in>IlmThreadSemaphore.cpp</in>
              <in>IlmThreadSemaphore.h</in>
              <in>IlmThreadSemaphorePosix.cpp</in>
              <in>IlmThreadSemaphorePosixCompat.cpp</in>
              <in>IlmThreadSemaphoreWin32.cpp</in>
              <in>IlmThreadWin32.cpp</in>
            </df>
            <df name="Imath">
              <in>ImathBox.h</in>
              <in>ImathBoxAlgo.h</in>
              <in>ImathColor.h</in>
              <in>ImathColorAlgo.cpp</in>
              <in>ImathColorAlgo.h</in>
              <in>ImathEuler.h</in>
              <in>ImathExc.h</in>
              <in>ImathFrame.h</in>
              <in>ImathFrustum.h</in>
              <in>ImathFrustumTest.h</in>
              <in>ImathFun.cpp</in>
              <in>ImathFun.h</in>
              <in>ImathGL.h</in>
              <in>ImathGLU.h</in>
              <in>ImathHalfLimits.h</in>
              <in>ImathInt64.h</in>
              <in>ImathInterval.h</in>
              <in>ImathLimits.h</in>
              <in>ImathLine.h</in>
              <in>ImathLineAlgo.h</in>
              <in>ImathMath.h</in>
              <in>ImathMatrix.h</in>
              <in>ImathMatrixAlgo.cpp</in>
              <in>ImathMatrixAlgo.h</in>
              <in>ImathPlane.h</in>
              <in>ImathPlatform.h</in>
              <in>ImathQuat.h</in>
              <in>ImathRandom.cpp</in>
              <in>ImathRandom.h</in>
              <in>ImathRoots.h</in>
              <in>ImathShear.h</in>
              <in>ImathSphere.h</in>
              <in>ImathVec.cpp</in>
              <in>ImathVec.h</in>
              <in>ImathVecAlgo.h</in>
            </df>
          </df>
          <df name="tbb">
            <in>android_additional.h</in>
            <in>arm_linux_stub.cpp</in>
          </df>
          <df name="zlib">
            <in>adler32.c</in>
            <in>compress.c</in>
            <in>crc32.c</in>
            <in>crc32.h</in>
            <in>deflate.c</in>
            <in>deflate.h</in>
            <in>gzclose.c</in>
            <in>gzguts.h</in>
            <in>gzlib.c</in>
            <in>gzread.c</in>
            <in>gzwrite.c</in>
            <in>infback.c</in>
            <in>inffast.c</in>
            <in>inffast.h</in>
            <in>inffixed.h</in>
            <in>inflate.c</in>
            <in>inflate.h</in>
            <in>inftrees.c</in>
            <in>inftrees.h</in>
            <in>trees.c</in>
            <in>trees.h</in>
            <in>uncompr.c</in>
            <in>zlib.h</in>
            <in>zutil.c</in>
            <in>zutil.h</in>
          </df>
        </df>
        <df name="android">
          <df name="libinfo">
            <in>info.c</in>
          </df>
          <df name="package">
            <df name="res">
              <df name="drawable">
              </df>
              <df name="values">
              </df>
            </df>
          </df>
          <df name="scripts">
          </df>
          <df name="service">
            <df name="doc">
              <df name="img">
              </df>
            </df>
            <df name="engine">
              <df name="jni">
                <df name="BinderComponent">
                  <in>BnOpenCVEngine.cpp</in>
                  <in>BnOpenCVEngine.h</in>
                  <in>BpOpenCVEngine.cpp</in>
                  <in>BpOpenCVEngine.h</in>
                  <in>HardwareDetector.cpp</in>
                  <in>HardwareDetector.h</in>
                  <in>OpenCVEngine.cpp</in>
                  <in>OpenCVEngine.h</in>
                  <in>ProcReader.cpp</in>
                  <in>ProcReader.h</in>
                  <in>StringUtils.cpp</in>
                  <in>StringUtils.h</in>
                  <in>TegraDetector.cpp</in>
                  <in>TegraDetector.h</in>
                </df>
                <df name="include">
                  <in>EngineCommon.h</in>
                  <in>IOpenCVEngine.h</in>
                  <in>IPackageManager.h</in>
                  <in>OpenCVEngineHelper.h</in>
                </df>
                <df name="JNIWrapper">
                  <in>HardwareDetector_jni.cpp</in>
                  <in>HardwareDetector_jni.h</in>
                  <in>JavaBasedPackageManager.cpp</in>
                  <in>JavaBasedPackageManager.h</in>
                  <in>OpenCVEngine_jni.cpp</in>
                  <in>OpenCVEngine_jni.h</in>
                  <in>OpenCVLibraryInfo.cpp</in>
                  <in>OpenCVLibraryInfo.h</in>
                </df>
                <df name="NativeClient">
                  <in>ClientMain.cpp</in>
                </df>
                <df name="NativeService">
                  <in>CommonPackageManager.cpp</in>
                  <in>CommonPackageManager.h</in>
                  <in>NativePackageManager.cpp</in>
                  <in>NativePackageManager.h</in>
                  <in>PackageInfo.cpp</in>
                  <in>PackageInfo.h</in>
                  <in>ServiceMain.cpp</in>
                </df>
                <df name="Tests">
                  <df name="gtest">
                    <in>gtest-all.cpp</in>
                    <in>gtest.h</in>
                  </df>
                  <in>HardwareDetectionTest.cpp</in>
                  <in>OpenCVEngineTest.cpp</in>
                  <in>PackageInfoTest.cpp</in>
                  <in>PackageManagerStub.cpp</in>
                  <in>PackageManagerStub.h</in>
                  <in>PackageManagmentTest.cpp</in>
                  <in>TestMain.cpp</in>
                </df>
              </df>
              <df name="res">
                <df name="drawable">
                </df>
                <df name="layout">
                </df>
                <df name="layout-small">
                </df>
                <df name="values">
                </df>
              </df>
              <df name="src">
                <df name="org">
                  <df name="opencv">
                    <df name="engine">
                      <df name="manager">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
            </df>
            <df name="engine_test">
              <df name="res">
                <df name="drawable-hdpi">
                </df>
                <df name="drawable-ldpi">
                </df>
                <df name="drawable-mdpi">
                </df>
                <df name="layout">
                </df>
                <df name="values">
                </df>
              </df>
              <df name="src">
                <df name="org">
                  <df name="opencv">
                    <df name="engine">
                      <df name="test">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
            </df>
          </df>
        </df>
        <df name="apps">
          <df name="haartraining">
            <in>_cvcommon.h</in>
            <in>_cvhaartraining.h</in>
            <in>createsamples.cpp</in>
            <in>cvboost.cpp</in>
            <in>cvclassifier.h</in>
            <in>cvcommon.cpp</in>
            <in>cvhaarclassifier.cpp</in>
            <in>cvhaartraining.cpp</in>
            <in>cvhaartraining.h</in>
            <in>cvsamples.cpp</in>
            <in>haartraining.cpp</in>
            <in>performance.cpp</in>
          </df>
          <df name="sft">
            <df name="include">
              <df name="sft">
                <in>common.hpp</in>
                <in>config.hpp</in>
                <in>dataset.hpp</in>
              </df>
            </df>
            <in>config.cpp</in>
            <in>dataset.cpp</in>
            <in>sft.cpp</in>
          </df>
          <df name="traincascade">
            <in>HOGfeatures.cpp</in>
            <in>HOGfeatures.h</in>
            <in>boost.cpp</in>
            <in>boost.h</in>
            <in>cascadeclassifier.cpp</in>
            <in>cascadeclassifier.h</in>
            <in>features.cpp</in>
            <in>haarfeatures.cpp</in>
            <in>haarfeatures.h</in>
            <in>imagestorage.cpp</in>
            <in>imagestorage.h</in>
            <in>lbpfeatures.cpp</in>
            <in>lbpfeatures.h</in>
            <in>traincascade.cpp</in>
            <in>traincascade_features.h</in>
          </df>
        </df>
        <df name="cmake">
          <df name="templates">
          </df>
        </df>
        <df name="data">
          <df name="haarcascades">
          </df>
          <df name="hogcascades">
          </df>
          <df name="lbpcascades">
          </df>
          <df name="softcascade">
          </df>
          <df name="vec_files">
          </df>
        </df>
        <df name="doc">
          <df name="_static">
          </df>
          <df name="_themes">
            <df name="blue">
              <df name="static">
              </df>
            </df>
          </df>
          <df name="pattern_tools">
          </df>
          <df name="tutorials">
            <df name="calib3d">
              <df name="camera_calibration">
                <df name="images">
                </df>
              </df>
              <df name="camera_calibration_square_chess">
              </df>
              <df name="table_of_content_calib3d">
                <df name="images">
                </df>
              </df>
            </df>
            <df name="contrib">
              <df name="retina_model">
                <df name="images">
                </df>
              </df>
              <df name="table_of_content_contrib">
                <df name="images">
                </df>
              </df>
            </df>
            <df name="core">
              <df name="adding_images">
                <df name="images">
                </df>
              </df>
              <df name="basic_geometric_drawing">
                <df name="images">
                </df>
              </df>
              <df name="basic_linear_transform">
                <df name="images">
                </df>
              </df>
              <df name="discrete_fourier_transform">
                <df name="images">
                </df>
              </df>
              <df name="file_input_output_with_xml_yml">
              </df>
              <df name="how_to_scan_images">
              </df>
              <df name="interoperability_with_OpenCV_1">
                <df name="images">
                </df>
              </df>
              <df name="mat-mask-operations">
                <df name="images">
                </df>
              </df>
              <df name="mat_the_basic_image_container">
                <df name="images">
                </df>
              </df>
              <df name="random_generator_and_text">
                <df name="images">
                </df>
              </df>
              <df name="table_of_content_core">
                <df name="images">
                </df>
              </df>
            </df>
            <df name="definitions">
            </df>
            <df name="features2d">
              <df name="detection_of_planar_objects">
              </df>
              <df name="feature_description">
                <df name="images">
                </df>
              </df>
              <df name="feature_detection">
                <df name="images">
                </df>
              </df>
              <df name="feature_flann_matcher">
                <df name="images">
                </df>
              </df>
              <df name="feature_homography">
                <df name="images">
                </df>
              </df>
              <df name="table_of_content_features2d">
                <df name="images">
                  <df name="trackingmotion">
                  </df>
                </df>
              </df>
              <df name="trackingmotion">
                <df name="corner_subpixeles">
                  <df name="images">
                  </df>
                </df>
                <df name="generic_corner_detector">
                  <df name="images">
                  </df>
                </df>
                <df name="good_features_to_track">
                  <df name="images">
                  </df>
                </df>
                <df name="harris_detector">
                  <df name="images">
                  </df>
                </df>
              </df>
            </df>
            <df name="general">
              <df name="table_of_content_general">
              </df>
            </df>
            <df name="gpu">
              <df name="gpu-basics-similarity">
              </df>
              <df name="table_of_content_gpu">
                <df name="images">
                </df>
              </df>
            </df>
            <df name="highgui">
              <df name="table_of_content_highgui">
                <df name="images">
                </df>
              </df>
              <df name="trackbar">
                <df name="images">
                </df>
              </df>
              <df name="video-input-psnr-ssim">
                <df name="images">
                </df>
              </df>
              <df name="video-write">
                <df name="images">
                </df>
              </df>
            </df>
            <df name="images">
            </df>
            <df name="imgproc">
              <df name="erosion_dilatation">
                <df name="images">
                </df>
              </df>
              <df name="gausian_median_blur_bilateral_filter">
                <df name="images">
                </df>
              </df>
              <df name="histograms">
                <df name="back_projection">
                  <df name="images">
                  </df>
                </df>
                <df name="histogram_calculation">
                  <df name="images">
                  </df>
                </df>
                <df name="histogram_comparison">
                  <df name="images">
                  </df>
                </df>
                <df name="histogram_equalization">
                  <df name="images">
                  </df>
                </df>
                <df name="template_matching">
                  <df name="images">
                  </df>
                </df>
              </df>
              <df name="imgtrans">
                <df name="canny_detector">
                  <df name="images">
                  </df>
                </df>
                <df name="copyMakeBorder">
                  <df name="images">
                  </df>
                </df>
                <df name="filter_2d">
                  <df name="images">
                  </df>
                </df>
                <df name="hough_circle">
                  <df name="images">
                  </df>
                </df>
                <df name="hough_lines">
                  <df name="images">
                  </df>
                </df>
                <df name="laplace_operator">
                  <df name="images">
                  </df>
                </df>
                <df name="remap">
                  <df name="images">
                  </df>
                </df>
                <df name="sobel_derivatives">
                  <df name="images">
                  </df>
                </df>
                <df name="warp_affine">
                  <df name="images">
                  </df>
                </df>
              </df>
              <df name="opening_closing_hats">
                <df name="images">
                </df>
              </df>
              <df name="pyramids">
                <df name="images">
                </df>
              </df>
              <df name="shapedescriptors">
                <df name="bounding_rects_circles">
                  <df name="images">
                  </df>
                </df>
                <df name="bounding_rotated_ellipses">
                  <df name="images">
                  </df>
                </df>
                <df name="find_contours">
                  <df name="images">
                  </df>
                </df>
                <df name="hull">
                  <df name="images">
                  </df>
                </df>
                <df name="moments">
                  <df name="images">
                  </df>
                </df>
                <df name="point_polygon_test">
                  <df name="images">
                  </df>
                </df>
              </df>
              <df name="table_of_content_imgproc">
                <df name="images">
                  <df name="histograms">
                  </df>
                  <df name="imgtrans">
                  </df>
                  <df name="shapedescriptors">
                  </df>
                </df>
              </df>
              <df name="threshold">
                <df name="images">
                </df>
              </df>
            </df>
            <df name="introduction">
              <df name="android_binary_package">
                <df name="images">
                </df>
              </df>
              <df name="crosscompilation">
              </df>
              <df name="desktop_java">
                <df name="images">
                </df>
              </df>
              <df name="display_image">
                <df name="images">
                </df>
              </df>
              <df name="how_to_write_a_tutorial">
                <df name="images">
                </df>
              </df>
              <df name="ios_install">
              </df>
              <df name="linux_eclipse">
                <df name="images">
                </df>
              </df>
              <df name="linux_gcc_cmake">
                <df name="images">
                </df>
              </df>
              <df name="linux_install">
              </df>
              <df name="load_save_image">
                <df name="images">
                </df>
              </df>
              <df name="table_of_content_introduction">
                <df name="images">
                </df>
              </df>
              <df name="windows_install">
                <df name="images">
                </df>
              </df>
              <df name="windows_visual_studio_Opencv">
                <df name="images">
                </df>
              </df>
            </df>
            <df name="ios">
              <df name="hello">
                <df name="images">
                </df>
              </df>
              <df name="image_manipulation">
                <df name="images">
                </df>
              </df>
              <df name="table_of_content_ios">
                <df name="images">
                </df>
              </df>
              <df name="video_processing">
                <df name="images">
                </df>
              </df>
            </df>
            <df name="ml">
              <df name="introduction_to_svm">
                <df name="images">
                </df>
              </df>
              <df name="non_linear_svms">
                <df name="images">
                </df>
              </df>
              <df name="table_of_content_ml">
                <df name="images">
                </df>
              </df>
            </df>
            <df name="objdetect">
              <df name="cascade_classifier">
                <df name="images">
                </df>
              </df>
              <df name="table_of_content_objdetect">
                <df name="images">
                </df>
              </df>
            </df>
            <df name="video">
              <df name="table_of_content_video">
              </df>
            </df>
          </df>
          <df name="user_guide">
          </df>
          <df name="vidsurv">
          </df>
        </df>
        <df name="include">
          <df name="opencv">
            <in>cv.h</in>
            <in>cv.hpp</in>
            <in>cvaux.h</in>
            <in>cvaux.hpp</in>
            <in>cvwimage.h</in>
            <in>cxcore.h</in>
            <in>cxcore.hpp</in>
            <in>cxeigen.hpp</in>
            <in>cxmisc.h</in>
            <in>highgui.h</in>
            <in>ml.h</in>
          </df>
          <df name="opencv2">
            <in>opencv.hpp</in>
          </df>
        </df>
        <df name="ios">
          <df name="cmake">
            <df name="Modules">
              <df name="Platform">
              </df>
            </df>
            <df name="Toolchains">
            </df>
          </df>
        </df>
        <df name="modules">
          <df name="androidcamera">
            <df name="camera_wrapper">
              <df name="android.3.0.1">
              </df>
              <in>camera_wrapper.cpp</in>
              <in>camera_wrapper.h</in>
            </df>
            <df name="include">
              <in>camera_activity.hpp</in>
              <in>camera_properties.h</in>
            </df>
            <df name="src">
              <in>camera_activity.cpp</in>
            </df>
          </df>
          <df name="calib3d">
            <df name="doc">
              <df name="pics">
              </df>
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="calib3d">
                  <in>calib3d.hpp</in>
                </df>
                <in>calib3d.hpp</in>
              </df>
            </df>
            <df name="perf">
              <in>perf_cicrlesGrid.cpp</in>
              <in>perf_main.cpp</in>
              <in>perf_pnp.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
            </df>
            <df name="src">
              <in>calib3d_init.cpp</in>
              <in>calibinit.cpp</in>
              <in>calibration.cpp</in>
              <in>checkchessboard.cpp</in>
              <in>circlesgrid.cpp</in>
              <in>circlesgrid.hpp</in>
              <in>compat_ptsetreg.cpp</in>
              <in>compat_stereo.cpp</in>
              <in>epnp.cpp</in>
              <in>epnp.h</in>
              <in>five-point.cpp</in>
              <in>fundam.cpp</in>
              <in>levmarq.cpp</in>
              <in>p3p.cpp</in>
              <in>p3p.h</in>
              <in>polynom_solver.cpp</in>
              <in>polynom_solver.h</in>
              <in>posit.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>ptsetreg.cpp</in>
              <in>quadsubpix.cpp</in>
              <in>solvepnp.cpp</in>
              <in>stereobm.cpp</in>
              <in>stereosgbm.cpp</in>
              <in>triangulate.cpp</in>
            </df>
            <df name="test">
              <in>test_affine3d_estimator.cpp</in>
              <in>test_cameracalibration.cpp</in>
              <in>test_cameracalibration_artificial.cpp</in>
              <in>test_cameracalibration_badarg.cpp</in>
              <in>test_chessboardgenerator.cpp</in>
              <in>test_chessboardgenerator.hpp</in>
              <in>test_chesscorners.cpp</in>
              <in>test_chesscorners_badarg.cpp</in>
              <in>test_chesscorners_timing.cpp</in>
              <in>test_compose_rt.cpp</in>
              <in>test_cornerssubpix.cpp</in>
              <in>test_fundam.cpp</in>
              <in>test_homography.cpp</in>
              <in>test_main.cpp</in>
              <in>test_modelest.cpp</in>
              <in>test_posit.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
              <in>test_reproject_image_to_3d.cpp</in>
              <in>test_solvepnp_ransac.cpp</in>
              <in>test_stereomatching.cpp</in>
              <in>test_undistort.cpp</in>
              <in>test_undistort_badarg.cpp</in>
              <in>test_undistort_points.cpp</in>
            </df>
          </df>
          <df name="contrib">
            <df name="doc">
              <df name="facerec">
                <df name="etc">
                </df>
                <df name="img">
                  <df name="colormaps">
                  </df>
                  <df name="lbp">
                  </df>
                  <df name="tutorial">
                    <df name="facerec_video">
                    </df>
                    <df name="gender_classification">
                    </df>
                  </df>
                </df>
                <df name="src">
                  <in>facerec_demo.cpp</in>
                  <in>facerec_eigenfaces.cpp</in>
                  <in>facerec_fisherfaces.cpp</in>
                  <in>facerec_lbph.cpp</in>
                  <in>facerec_save_load.cpp</in>
                  <in>facerec_video.cpp</in>
                </df>
                <df name="tutorial">
                </df>
              </df>
              <df name="retina">
              </df>
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="contrib">
                  <in>contrib.hpp</in>
                  <in>detection_based_tracker.hpp</in>
                  <in>hybridtracker.hpp</in>
                  <in>openfabmap.hpp</in>
                  <in>retina.hpp</in>
                </df>
                <in>contrib.hpp</in>
              </df>
            </df>
            <df name="src">
              <in>adaptiveskindetector.cpp</in>
              <in>ba.cpp</in>
              <in>basicretinafilter.cpp</in>
              <in>basicretinafilter.hpp</in>
              <in>bowmsctrainer.cpp</in>
              <in>chamfermatching.cpp</in>
              <in>chowliutree.cpp</in>
              <in>colormap.cpp</in>
              <in>colortracker.cpp</in>
              <in>contrib_init.cpp</in>
              <in>detection_based_tracker.cpp</in>
              <in>facerec.cpp</in>
              <in>featuretracker.cpp</in>
              <in>fuzzymeanshifttracker.cpp</in>
              <in>gencolors.cpp</in>
              <in>hybridtracker.cpp</in>
              <in>imagelogpolprojection.cpp</in>
              <in>imagelogpolprojection.hpp</in>
              <in>inputoutput.cpp</in>
              <in>lda.cpp</in>
              <in>logpolar_bsm.cpp</in>
              <in>magnoretinafilter.cpp</in>
              <in>magnoretinafilter.hpp</in>
              <in>octree.cpp</in>
              <in>openfabmap.cpp</in>
              <in>parvoretinafilter.cpp</in>
              <in>parvoretinafilter.hpp</in>
              <in>polyfit.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>retina.cpp</in>
              <in>retinacolor.cpp</in>
              <in>retinacolor.hpp</in>
              <in>retinafilter.cpp</in>
              <in>retinafilter.hpp</in>
              <in>rgbdodometry.cpp</in>
              <in>selfsimilarity.cpp</in>
              <in>spinimages.cpp</in>
              <in>stereovar.cpp</in>
              <in>templatebuffer.hpp</in>
            </df>
            <df name="test">
              <in>test_main.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
            </df>
          </df>
          <df name="core">
            <df name="doc">
              <df name="pics">
              </df>
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="core">
                  <in>core.hpp</in>
                  <in>core_c.h</in>
                  <in>cuda_devptrs.hpp</in>
                  <in>eigen.hpp</in>
                  <in>gpumat.hpp</in>
                  <in>internal.hpp</in>
                  <in>mat.hpp</in>
                  <in>opengl.hpp</in>
                  <in>operations.hpp</in>
                  <in>stream_accessor.hpp</in>
                  <in>types_c.h</in>
                  <in>version.hpp</in>
                  <in>wimage.hpp</in>
                </df>
                <in>core.hpp</in>
              </df>
            </df>
            <df name="perf">
              <in>perf_abs.cpp</in>
              <in>perf_addWeighted.cpp</in>
              <in>perf_arithm.cpp</in>
              <in>perf_bitwise.cpp</in>
              <in>perf_compare.cpp</in>
              <in>perf_convertTo.cpp</in>
              <in>perf_dft.cpp</in>
              <in>perf_dot.cpp</in>
              <in>perf_inRange.cpp</in>
              <in>perf_main.cpp</in>
              <in>perf_mat.cpp</in>
              <in>perf_math.cpp</in>
              <in>perf_merge.cpp</in>
              <in>perf_minmaxloc.cpp</in>
              <in>perf_norm.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
              <in>perf_reduce.cpp</in>
              <in>perf_split.cpp</in>
              <in>perf_stat.cpp</in>
            </df>
            <df name="src">
              <df name="cuda">
              </df>
              <in>algorithm.cpp</in>
              <in>alloc.cpp</in>
              <in>arithm.cpp</in>
              <in>array.cpp</in>
              <in>command_line_parser.cpp</in>
              <in>convert.cpp</in>
              <in>copy.cpp</in>
              <in>cudastream.cpp</in>
              <in>datastructs.cpp</in>
              <in>drawing.cpp</in>
              <in>dxt.cpp</in>
              <in>gl_core_3_1.cpp</in>
              <in>gl_core_3_1.hpp</in>
              <in>glob.cpp</in>
              <in>gpumat.cpp</in>
              <in>lapack.cpp</in>
              <in>mathfuncs.cpp</in>
              <in>matmul.cpp</in>
              <in>matop.cpp</in>
              <in>matrix.cpp</in>
              <in>matrix_operations.cpp</in>
              <in>opengl_interop.cpp</in>
              <in>out.cpp</in>
              <in>parallel.cpp</in>
              <in>persistence.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>rand.cpp</in>
              <in>stat.cpp</in>
              <in>system.cpp</in>
              <in>tables.cpp</in>
            </df>
            <df name="test">
              <in>test_arithm.cpp</in>
              <in>test_countnonzero.cpp</in>
              <in>test_ds.cpp</in>
              <in>test_dxt.cpp</in>
              <in>test_eigen.cpp</in>
              <in>test_io.cpp</in>
              <in>test_main.cpp</in>
              <in>test_mat.cpp</in>
              <in>test_math.cpp</in>
              <in>test_misc.cpp</in>
              <in>test_operations.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
              <in>test_rand.cpp</in>
            </df>
          </df>
          <df name="features2d">
            <df name="doc">
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="features2d">
                  <in>features2d.hpp</in>
                </df>
                <in>features2d.hpp</in>
              </df>
            </df>
            <df name="perf">
              <in>perf_batchDistance.cpp</in>
              <in>perf_fast.cpp</in>
              <in>perf_main.cpp</in>
              <in>perf_orb.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
            </df>
            <df name="src">
              <in>bagofwords.cpp</in>
              <in>blobdetector.cpp</in>
              <in>brief.cpp</in>
              <in>brisk.cpp</in>
              <in>descriptors.cpp</in>
              <in>detectors.cpp</in>
              <in>draw.cpp</in>
              <in>dynamic.cpp</in>
              <in>evaluation.cpp</in>
              <in>fast.cpp</in>
              <in>fast_score.cpp</in>
              <in>fast_score.hpp</in>
              <in>features2d_init.cpp</in>
              <in>freak.cpp</in>
              <in>generated_16.i</in>
              <in>generated_32.i</in>
              <in>generated_64.i</in>
              <in>keypoint.cpp</in>
              <in>matchers.cpp</in>
              <in>mser.cpp</in>
              <in>orb.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>stardetector.cpp</in>
            </df>
            <df name="test">
              <in>test_brisk.cpp</in>
              <in>test_descriptors_regression.cpp</in>
              <in>test_detectors_regression.cpp</in>
              <in>test_fast.cpp</in>
              <in>test_keypoints.cpp</in>
              <in>test_main.cpp</in>
              <in>test_matchers_algorithmic.cpp</in>
              <in>test_mser.cpp</in>
              <in>test_nearestneighbors.cpp</in>
              <in>test_orb.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
              <in>test_rotation_and_scale_invariance.cpp</in>
            </df>
          </df>
          <df name="flann">
            <df name="doc">
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="flann">
                  <in>all_indices.h</in>
                  <in>allocator.h</in>
                  <in>any.h</in>
                  <in>autotuned_index.h</in>
                  <in>composite_index.h</in>
                  <in>config.h</in>
                  <in>defines.h</in>
                  <in>dist.h</in>
                  <in>dummy.h</in>
                  <in>dynamic_bitset.h</in>
                  <in>flann.hpp</in>
                  <in>flann_base.hpp</in>
                  <in>general.h</in>
                  <in>ground_truth.h</in>
                  <in>hdf5.h</in>
                  <in>heap.h</in>
                  <in>hierarchical_clustering_index.h</in>
                  <in>index_testing.h</in>
                  <in>kdtree_index.h</in>
                  <in>kdtree_single_index.h</in>
                  <in>kmeans_index.h</in>
                  <in>linear_index.h</in>
                  <in>logger.h</in>
                  <in>lsh_index.h</in>
                  <in>lsh_table.h</in>
                  <in>matrix.h</in>
                  <in>miniflann.hpp</in>
                  <in>nn_index.h</in>
                  <in>object_factory.h</in>
                  <in>params.h</in>
                  <in>random.h</in>
                  <in>result_set.h</in>
                  <in>sampling.h</in>
                  <in>saving.h</in>
                  <in>simplex_downhill.h</in>
                  <in>timer.h</in>
                </df>
                <in>flann.hpp</in>
              </df>
            </df>
            <df name="src">
              <in>flann.cpp</in>
              <in>miniflann.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
            </df>
            <df name="test">
              <in>test_lshtable_badarg.cpp</in>
              <in>test_main.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
            </df>
          </df>
          <df name="gpu">
            <df name="app">
              <df name="nv_perf_test">
                <in>main.cpp</in>
              </df>
            </df>
            <df name="doc">
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="gpu">
                  <df name="device">
                    <df name="detail">
                      <in>color_detail.hpp</in>
                      <in>reduce.hpp</in>
                      <in>reduce_key_val.hpp</in>
                      <in>transform_detail.hpp</in>
                      <in>type_traits_detail.hpp</in>
                      <in>vec_distance_detail.hpp</in>
                    </df>
                    <in>block.hpp</in>
                    <in>border_interpolate.hpp</in>
                    <in>color.hpp</in>
                    <in>common.hpp</in>
                    <in>datamov_utils.hpp</in>
                    <in>dynamic_smem.hpp</in>
                    <in>emulation.hpp</in>
                    <in>filters.hpp</in>
                    <in>funcattrib.hpp</in>
                    <in>functional.hpp</in>
                    <in>limits.hpp</in>
                    <in>reduce.hpp</in>
                    <in>saturate_cast.hpp</in>
                    <in>scan.hpp</in>
                    <in>static_check.hpp</in>
                    <in>transform.hpp</in>
                    <in>type_traits.hpp</in>
                    <in>utility.hpp</in>
                    <in>vec_distance.hpp</in>
                    <in>vec_math.hpp</in>
                    <in>vec_traits.hpp</in>
                    <in>warp.hpp</in>
                    <in>warp_reduce.hpp</in>
                    <in>warp_shuffle.hpp</in>
                  </df>
                  <in>devmem2d.hpp</in>
                  <in>gpu.hpp</in>
                  <in>gpumat.hpp</in>
                </df>
                <in>gpu.hpp</in>
              </df>
            </df>
            <df name="misc">
            </df>
            <df name="perf">
              <in>perf_calib3d.cpp</in>
              <in>perf_core.cpp</in>
              <in>perf_denoising.cpp</in>
              <in>perf_features2d.cpp</in>
              <in>perf_filters.cpp</in>
              <in>perf_imgproc.cpp</in>
              <in>perf_labeling.cpp</in>
              <in>perf_main.cpp</in>
              <in>perf_matop.cpp</in>
              <in>perf_objdetect.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
              <in>perf_video.cpp</in>
              <in>utility.cpp</in>
              <in>utility.hpp</in>
            </df>
            <df name="perf4au">
              <in>main.cpp</in>
            </df>
            <df name="src">
              <df name="cuda">
                <in>column_filter.h</in>
                <in>fgd_bgfg_common.hpp</in>
                <in>internal_shared.hpp</in>
                <in>lbp.hpp</in>
                <in>row_filter.h</in>
                <in>safe_call.hpp</in>
                <in>texture_binder.hpp</in>
              </df>
              <df name="nvidia">
                <df name="core">
                  <in>NCV.hpp</in>
                  <in>NCVAlg.hpp</in>
                  <in>NCVColorConversion.hpp</in>
                  <in>NCVPixelOperations.hpp</in>
                  <in>NCVPyramid.hpp</in>
                  <in>NCVRuntimeTemplates.hpp</in>
                </df>
                <df name="NPP_staging">
                  <in>NPP_staging.hpp</in>
                </df>
                <in>NCVBroxOpticalFlow.hpp</in>
                <in>NCVHaarObjectDetection.hpp</in>
              </df>
              <in>arithm.cpp</in>
              <in>bgfg_gmg.cpp</in>
              <in>bgfg_mog.cpp</in>
              <in>bgfg_vibe.cpp</in>
              <in>bilateral_filter.cpp</in>
              <in>blend.cpp</in>
              <in>brute_force_matcher.cpp</in>
              <in>calib3d.cpp</in>
              <in>cascadeclassifier.cpp</in>
              <in>color.cpp</in>
              <in>cu_safe_call.cpp</in>
              <in>cu_safe_call.h</in>
              <in>cuvid_video_source.cpp</in>
              <in>cuvid_video_source.h</in>
              <in>cvt_color_internal.h</in>
              <in>denoising.cpp</in>
              <in>element_operations.cpp</in>
              <in>error.cpp</in>
              <in>fast.cpp</in>
              <in>ffmpeg_video_source.cpp</in>
              <in>ffmpeg_video_source.h</in>
              <in>fgd_bgfg.cpp</in>
              <in>filtering.cpp</in>
              <in>frame_queue.cpp</in>
              <in>frame_queue.h</in>
              <in>gftt.cpp</in>
              <in>global_motion.cpp</in>
              <in>graphcuts.cpp</in>
              <in>hog.cpp</in>
              <in>hough.cpp</in>
              <in>imgproc.cpp</in>
              <in>match_template.cpp</in>
              <in>matrix_reductions.cpp</in>
              <in>mssegmentation.cpp</in>
              <in>optflowbm.cpp</in>
              <in>optical_flow.cpp</in>
              <in>optical_flow_farneback.cpp</in>
              <in>orb.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>pyramids.cpp</in>
              <in>pyrlk.cpp</in>
              <in>remap.cpp</in>
              <in>resize.cpp</in>
              <in>speckle_filtering.cpp</in>
              <in>split_merge.cpp</in>
              <in>stereobm.cpp</in>
              <in>stereobp.cpp</in>
              <in>stereocsbp.cpp</in>
              <in>surf.cpp</in>
              <in>thread_wrappers.cpp</in>
              <in>thread_wrappers.h</in>
              <in>tvl1flow.cpp</in>
              <in>video_decoder.cpp</in>
              <in>video_decoder.h</in>
              <in>video_parser.cpp</in>
              <in>video_parser.h</in>
              <in>video_reader.cpp</in>
              <in>video_writer.cpp</in>
              <in>warp.cpp</in>
            </df>
            <df name="test">
              <df name="nvidia">
                <in>NCVAutoTestLister.hpp</in>
                <in>NCVTest.hpp</in>
                <in>NCVTestSourceProvider.hpp</in>
                <in>TestCompact.cpp</in>
                <in>TestCompact.h</in>
                <in>TestDrawRects.cpp</in>
                <in>TestDrawRects.h</in>
                <in>TestHaarCascadeApplication.cpp</in>
                <in>TestHaarCascadeApplication.h</in>
                <in>TestHaarCascadeLoader.cpp</in>
                <in>TestHaarCascadeLoader.h</in>
                <in>TestHypothesesFilter.cpp</in>
                <in>TestHypothesesFilter.h</in>
                <in>TestHypothesesGrow.cpp</in>
                <in>TestHypothesesGrow.h</in>
                <in>TestIntegralImage.cpp</in>
                <in>TestIntegralImage.h</in>
                <in>TestIntegralImageSquared.cpp</in>
                <in>TestIntegralImageSquared.h</in>
                <in>TestRectStdDev.cpp</in>
                <in>TestRectStdDev.h</in>
                <in>TestResize.cpp</in>
                <in>TestResize.h</in>
                <in>TestTranspose.cpp</in>
                <in>TestTranspose.h</in>
                <in>main_nvidia.cpp</in>
              </df>
              <in>interpolation.hpp</in>
              <in>main.cpp</in>
              <in>main_test_nvidia.h</in>
              <in>test_bgfg.cpp</in>
              <in>test_calib3d.cpp</in>
              <in>test_color.cpp</in>
              <in>test_copy_make_border.cpp</in>
              <in>test_core.cpp</in>
              <in>test_denoising.cpp</in>
              <in>test_features2d.cpp</in>
              <in>test_filters.cpp</in>
              <in>test_global_motion.cpp</in>
              <in>test_gpumat.cpp</in>
              <in>test_hough.cpp</in>
              <in>test_imgproc.cpp</in>
              <in>test_labeling.cpp</in>
              <in>test_nvidia.cpp</in>
              <in>test_objdetect.cpp</in>
              <in>test_opengl.cpp</in>
              <in>test_optflow.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
              <in>test_pyramids.cpp</in>
              <in>test_remap.cpp</in>
              <in>test_resize.cpp</in>
              <in>test_stream.cpp</in>
              <in>test_threshold.cpp</in>
              <in>test_video.cpp</in>
              <in>test_warp_affine.cpp</in>
              <in>test_warp_perspective.cpp</in>
              <in>utility.cpp</in>
              <in>utility.hpp</in>
            </df>
          </df>
          <df name="highgui">
            <df name="doc">
              <df name="pics">
              </df>
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="highgui">
                  <in>cap_ios.h</in>
                  <in>highgui.hpp</in>
                  <in>highgui_c.h</in>
                </df>
                <in>highgui.hpp</in>
              </df>
            </df>
            <df name="perf">
              <in>perf_input.cpp</in>
              <in>perf_main.cpp</in>
              <in>perf_output.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
            </df>
            <df name="src">
              <df name="files_Qt">
                <df name="Milky">
                  <df name="48">
                  </df>
                  <df name="64">
                  </df>
                </df>
              </df>
              <in>bitstrm.cpp</in>
              <in>bitstrm.hpp</in>
              <in>cap.cpp</in>
              <in>cap_android.cpp</in>
              <in>cap_avfoundation.mm</in>
              <in>cap_cmu.cpp</in>
              <in>cap_dc1394.cpp</in>
              <in>cap_dc1394_v2.cpp</in>
              <in>cap_dshow.cpp</in>
              <in>cap_ffmpeg.cpp</in>
              <in>cap_ffmpeg_api.hpp</in>
              <in>cap_ffmpeg_impl.hpp</in>
              <in>cap_giganetix.cpp</in>
              <in>cap_gstreamer.cpp</in>
              <in>cap_images.cpp</in>
              <in>cap_ios_abstract_camera.mm</in>
              <in>cap_ios_photo_camera.mm</in>
              <in>cap_ios_video_camera.mm</in>
              <in>cap_libv4l.cpp</in>
              <in>cap_openni.cpp</in>
              <in>cap_pvapi.cpp</in>
              <in>cap_qt.cpp</in>
              <in>cap_qtkit.mm</in>
              <in>cap_unicap.cpp</in>
              <in>cap_v4l.cpp</in>
              <in>cap_vfw.cpp</in>
              <in>cap_ximea.cpp</in>
              <in>cap_xine.cpp</in>
              <in>ffmpeg_codecs.hpp</in>
              <in>grfmt_base.cpp</in>
              <in>grfmt_base.hpp</in>
              <in>grfmt_bmp.cpp</in>
              <in>grfmt_bmp.hpp</in>
              <in>grfmt_exr.cpp</in>
              <in>grfmt_exr.hpp</in>
              <in>grfmt_jpeg.cpp</in>
              <in>grfmt_jpeg.hpp</in>
              <in>grfmt_jpeg2000.cpp</in>
              <in>grfmt_jpeg2000.hpp</in>
              <in>grfmt_png.cpp</in>
              <in>grfmt_png.hpp</in>
              <in>grfmt_pxm.cpp</in>
              <in>grfmt_pxm.hpp</in>
              <in>grfmt_sunras.cpp</in>
              <in>grfmt_sunras.hpp</in>
              <in>grfmt_tiff.cpp</in>
              <in>grfmt_tiff.hpp</in>
              <in>grfmt_webp.cpp</in>
              <in>grfmt_webp.hpp</in>
              <in>grfmts.hpp</in>
              <in>loadsave.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>utils.cpp</in>
              <in>utils.hpp</in>
              <in>window.cpp</in>
              <in>window_QT.cpp</in>
              <in>window_QT.h</in>
              <in>window_carbon.cpp</in>
              <in>window_cocoa.mm</in>
              <in>window_gtk.cpp</in>
              <in>window_w32.cpp</in>
            </df>
            <df name="test">
              <in>test_drawing.cpp</in>
              <in>test_ffmpeg.cpp</in>
              <in>test_fourcc.cpp</in>
              <in>test_framecount.cpp</in>
              <in>test_grfmt.cpp</in>
              <in>test_gui.cpp</in>
              <in>test_main.cpp</in>
              <in>test_positioning.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
              <in>test_video_io.cpp</in>
              <in>test_video_pos.cpp</in>
            </df>
          </df>
          <df name="imgproc">
            <df name="doc">
              <df name="pics">
              </df>
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="imgproc">
                  <in>imgproc.hpp</in>
                  <in>imgproc_c.h</in>
                  <in>types_c.h</in>
                </df>
                <in>imgproc.hpp</in>
              </df>
            </df>
            <df name="perf">
              <in>perf_bilateral.cpp</in>
              <in>perf_blur.cpp</in>
              <in>perf_canny.cpp</in>
              <in>perf_cornerEigenValsAndVecs.cpp</in>
              <in>perf_cornerHarris.cpp</in>
              <in>perf_cvt_color.cpp</in>
              <in>perf_distanceTransform.cpp</in>
              <in>perf_filter2d.cpp</in>
              <in>perf_goodFeaturesToTrack.cpp</in>
              <in>perf_histogram.cpp</in>
              <in>perf_houghLines.cpp</in>
              <in>perf_integral.cpp</in>
              <in>perf_main.cpp</in>
              <in>perf_matchTemplate.cpp</in>
              <in>perf_morph.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
              <in>perf_pyramids.cpp</in>
              <in>perf_remap.cpp</in>
              <in>perf_resize.cpp</in>
              <in>perf_sepfilters.cpp</in>
              <in>perf_threshold.cpp</in>
              <in>perf_warp.cpp</in>
            </df>
            <df name="src">
              <in>_geom.h</in>
              <in>accum.cpp</in>
              <in>approx.cpp</in>
              <in>canny.cpp</in>
              <in>color.cpp</in>
              <in>connectedcomponents.cpp</in>
              <in>contours.cpp</in>
              <in>convhull.cpp</in>
              <in>corner.cpp</in>
              <in>cornersubpix.cpp</in>
              <in>demosaicing.cpp</in>
              <in>deriv.cpp</in>
              <in>distransform.cpp</in>
              <in>emd.cpp</in>
              <in>featureselect.cpp</in>
              <in>filter.cpp</in>
              <in>floodfill.cpp</in>
              <in>gabor.cpp</in>
              <in>gcgraph.hpp</in>
              <in>generalized_hough.cpp</in>
              <in>geometry.cpp</in>
              <in>grabcut.cpp</in>
              <in>histogram.cpp</in>
              <in>hough.cpp</in>
              <in>imgwarp.cpp</in>
              <in>linefit.cpp</in>
              <in>matchcontours.cpp</in>
              <in>moments.cpp</in>
              <in>morph.cpp</in>
              <in>phasecorr.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>pyramids.cpp</in>
              <in>rotcalipers.cpp</in>
              <in>samplers.cpp</in>
              <in>segmentation.cpp</in>
              <in>shapedescr.cpp</in>
              <in>smooth.cpp</in>
              <in>subdivision2d.cpp</in>
              <in>sumpixels.cpp</in>
              <in>tables.cpp</in>
              <in>templmatch.cpp</in>
              <in>thresh.cpp</in>
              <in>undistort.cpp</in>
              <in>utils.cpp</in>
            </df>
            <df name="test">
              <in>test_approxpoly.cpp</in>
              <in>test_bilateral_filter.cpp</in>
              <in>test_boundingrect.cpp</in>
              <in>test_canny.cpp</in>
              <in>test_color.cpp</in>
              <in>test_connectedcomponents.cpp</in>
              <in>test_contours.cpp</in>
              <in>test_convhull.cpp</in>
              <in>test_cvtyuv.cpp</in>
              <in>test_distancetransform.cpp</in>
              <in>test_emd.cpp</in>
              <in>test_filter.cpp</in>
              <in>test_floodfill.cpp</in>
              <in>test_grabcut.cpp</in>
              <in>test_histograms.cpp</in>
              <in>test_houghLines.cpp</in>
              <in>test_imgwarp.cpp</in>
              <in>test_imgwarp_strict.cpp</in>
              <in>test_main.cpp</in>
              <in>test_moments.cpp</in>
              <in>test_pc.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
              <in>test_templmatch.cpp</in>
              <in>test_thresh.cpp</in>
              <in>test_watershed.cpp</in>
            </df>
          </df>
          <df name="java">
            <df name="android_lib">
              <df name="jni">
              </df>
              <df name="res">
                <df name="values">
                </df>
              </df>
            </df>
            <df name="android_test">
              <df name="res">
                <df name="drawable">
                </df>
                <df name="layout">
                </df>
                <df name="raw">
                </df>
                <df name="values">
                </df>
              </df>
              <df name="src">
                <df name="org">
                  <df name="opencv">
                    <df name="test">
                      <df name="android">
                      </df>
                      <df name="calib3d">
                      </df>
                      <df name="core">
                      </df>
                      <df name="features2d">
                      </df>
                      <df name="highgui">
                      </df>
                      <df name="imgproc">
                      </df>
                      <df name="ml">
                      </df>
                      <df name="objdetect">
                      </df>
                      <df name="photo">
                      </df>
                      <df name="utils">
                      </df>
                      <df name="video">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
            </df>
            <df name="generator">
              <df name="config">
              </df>
              <df name="src">
                <df name="cpp">
                  <in>Mat.cpp</in>
                  <in>VideoCapture.cpp</in>
                  <in>common.h</in>
                  <in>converters.cpp</in>
                  <in>converters.h</in>
                  <in>core_manual.cpp</in>
                  <in>core_manual.hpp</in>
                  <in>features2d_manual.hpp</in>
                  <in>jni_part.cpp</in>
                  <in>utils.cpp</in>
                </df>
                <df name="java">
                </df>
              </df>
            </df>
            <df name="test">
              <df name="lib">
              </df>
              <df name="src">
                <df name="org">
                  <df name="opencv">
                    <df name="test">
                    </df>
                  </df>
                </df>
              </df>
            </df>
          </df>
          <df name="legacy">
            <df name="doc">
              <df name="pics">
              </df>
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="legacy">
                  <in>blobtrack.hpp</in>
                  <in>compat.hpp</in>
                  <in>legacy.hpp</in>
                  <in>streams.hpp</in>
                </df>
                <in>legacy.hpp</in>
              </df>
            </df>
            <df name="src">
              <in>3dtracker.cpp</in>
              <in>_facedetection.h</in>
              <in>_featuretree.h</in>
              <in>_kdtree.hpp</in>
              <in>_matrix.h</in>
              <in>_vectrack.h</in>
              <in>_vm.h</in>
              <in>auxutils.cpp</in>
              <in>bgfg_acmmm2003.cpp</in>
              <in>bgfg_codebook.cpp</in>
              <in>bgfg_common.cpp</in>
              <in>bgfg_estimation.cpp</in>
              <in>bgfg_gaussmix.cpp</in>
              <in>blobtrack.cpp</in>
              <in>blobtrackanalysis.cpp</in>
              <in>blobtrackanalysishist.cpp</in>
              <in>blobtrackanalysisior.cpp</in>
              <in>blobtrackanalysistrackdist.cpp</in>
              <in>blobtrackgen1.cpp</in>
              <in>blobtrackgenyml.cpp</in>
              <in>blobtrackingauto.cpp</in>
              <in>blobtrackingcc.cpp</in>
              <in>blobtrackingccwithcr.cpp</in>
              <in>blobtrackinglist.cpp</in>
              <in>blobtrackingmsfg.cpp</in>
              <in>blobtrackingmsfgs.cpp</in>
              <in>blobtrackpostprockalman.cpp</in>
              <in>blobtrackpostproclinear.cpp</in>
              <in>blobtrackpostproclist.cpp</in>
              <in>calcimagehomography.cpp</in>
              <in>calibfilter.cpp</in>
              <in>calonder.cpp</in>
              <in>camshift.cpp</in>
              <in>clique.cpp</in>
              <in>compat.cpp</in>
              <in>condens.cpp</in>
              <in>contourtree.cpp</in>
              <in>correspond.cpp</in>
              <in>corrimages.cpp</in>
              <in>createhandmask.cpp</in>
              <in>decomppoly.cpp</in>
              <in>dominants.cpp</in>
              <in>dpstereo.cpp</in>
              <in>eigenobjects.cpp</in>
              <in>em.cpp</in>
              <in>enmin.cpp</in>
              <in>enteringblobdetection.cpp</in>
              <in>enteringblobdetectionreal.cpp</in>
              <in>epilines.cpp</in>
              <in>extendededges.cpp</in>
              <in>face.cpp</in>
              <in>face.h</in>
              <in>facedetection.cpp</in>
              <in>facedetection.h</in>
              <in>facetemplate.cpp</in>
              <in>facetemplate.h</in>
              <in>features2d.cpp</in>
              <in>featuretree.cpp</in>
              <in>findface.cpp</in>
              <in>findhandregion.cpp</in>
              <in>hmm.cpp</in>
              <in>hmm1d.cpp</in>
              <in>hmmobs.cpp</in>
              <in>image.cpp</in>
              <in>kdtree.cpp</in>
              <in>lcm.cpp</in>
              <in>lee.cpp</in>
              <in>levmar.cpp</in>
              <in>levmarprojbandle.cpp</in>
              <in>levmartrif.cpp</in>
              <in>lines.cpp</in>
              <in>lmeds.cpp</in>
              <in>lsh.cpp</in>
              <in>morphcontours.cpp</in>
              <in>morphing.cpp</in>
              <in>oneway.cpp</in>
              <in>optflowbm.cpp</in>
              <in>optflowhs.cpp</in>
              <in>optflowlk.cpp</in>
              <in>pgh.cpp</in>
              <in>planardetect.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>prewarp.cpp</in>
              <in>pyrsegmentation.cpp</in>
              <in>scanlines.cpp</in>
              <in>segment.cpp</in>
              <in>snakes.cpp</in>
              <in>spilltree.cpp</in>
              <in>stereogc.cpp</in>
              <in>subdiv2.cpp</in>
              <in>testseq.cpp</in>
              <in>texture.cpp</in>
              <in>trifocal.cpp</in>
              <in>vecfacetracking.cpp</in>
              <in>video.cpp</in>
            </df>
            <df name="test">
              <in>test_bruteforcematcher.cpp</in>
              <in>test_em.cpp</in>
              <in>test_main.cpp</in>
              <in>test_nearestneighbors.cpp</in>
              <in>test_optflow.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
              <in>test_pyrsegmentation.cpp</in>
              <in>test_stereomatching.cpp</in>
              <in>test_subdivisions.cpp</in>
            </df>
          </df>
          <df name="ml">
            <df name="doc">
              <df name="pics">
              </df>
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="ml">
                  <in>ml.hpp</in>
                </df>
                <in>ml.hpp</in>
              </df>
            </df>
            <df name="src">
              <in>ann_mlp.cpp</in>
              <in>boost.cpp</in>
              <in>cnn.cpp</in>
              <in>data.cpp</in>
              <in>em.cpp</in>
              <in>ertrees.cpp</in>
              <in>estimate.cpp</in>
              <in>gbt.cpp</in>
              <in>inner_functions.cpp</in>
              <in>knearest.cpp</in>
              <in>ml_init.cpp</in>
              <in>nbayes.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>rtrees.cpp</in>
              <in>svm.cpp</in>
              <in>testset.cpp</in>
              <in>tree.cpp</in>
            </df>
            <df name="test">
              <in>test_emknearestkmeans.cpp</in>
              <in>test_gbttest.cpp</in>
              <in>test_main.cpp</in>
              <in>test_mltests.cpp</in>
              <in>test_mltests2.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
              <in>test_save_load.cpp</in>
            </df>
          </df>
          <df name="nonfree">
            <df name="doc">
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="nonfree">
                  <in>features2d.hpp</in>
                  <in>nonfree.hpp</in>
                </df>
                <in>nonfree.hpp</in>
              </df>
            </df>
            <df name="perf">
              <in>perf_main.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
              <in>perf_surf.cpp</in>
            </df>
            <df name="src">
              <in>nonfree_init.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>sift.cpp</in>
              <in>surf.cpp</in>
            </df>
            <df name="test">
              <in>test_detectors.cpp</in>
              <in>test_features2d.cpp</in>
              <in>test_keypoints.cpp</in>
              <in>test_main.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
              <in>test_rotation_and_scale_invariance.cpp</in>
            </df>
          </df>
          <df name="objdetect">
            <df name="doc">
              <df name="pics">
              </df>
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="objdetect">
                  <in>objdetect.hpp</in>
                </df>
                <in>objdetect.hpp</in>
              </df>
            </df>
            <df name="perf">
              <in>perf_cascadeclassifier.cpp</in>
              <in>perf_main.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
            </df>
            <df name="src">
              <in>_latentsvm.h</in>
              <in>_lsvm_distancetransform.h</in>
              <in>_lsvm_error.h</in>
              <in>_lsvm_fft.h</in>
              <in>_lsvm_matching.h</in>
              <in>_lsvm_resizeimg.h</in>
              <in>_lsvm_routine.h</in>
              <in>_lsvm_tbbversion.h</in>
              <in>_lsvm_types.h</in>
              <in>_lsvmparser.h</in>
              <in>cascadedetect.cpp</in>
              <in>cascadedetect.hpp</in>
              <in>datamatrix.cpp</in>
              <in>distancetransform.cpp</in>
              <in>featurepyramid.cpp</in>
              <in>fft.cpp</in>
              <in>haar.cpp</in>
              <in>hog.cpp</in>
              <in>latentsvm.cpp</in>
              <in>latentsvmdetector.cpp</in>
              <in>linemod.cpp</in>
              <in>lsvmparser.cpp</in>
              <in>lsvmtbbversion.cpp</in>
              <in>matching.cpp</in>
              <in>normal_lut.i</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>resizeimg.cpp</in>
              <in>routine.cpp</in>
            </df>
            <df name="test">
              <in>test_cascadeandhog.cpp</in>
              <in>test_latentsvmdetector.cpp</in>
              <in>test_main.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
            </df>
          </df>
          <df name="ocl">
            <df name="doc">
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="ocl">
                  <in>matrix_operations.hpp</in>
                  <in>ocl.hpp</in>
                </df>
                <in>ocl.hpp</in>
              </df>
            </df>
            <df name="perf">
              <in>interpolation.hpp</in>
              <in>main.cpp</in>
              <in>perf_arithm.cpp</in>
              <in>perf_blend.cpp</in>
              <in>perf_canny.cpp</in>
              <in>perf_columnsum.cpp</in>
              <in>perf_fft.cpp</in>
              <in>perf_filters.cpp</in>
              <in>perf_gemm.cpp</in>
              <in>perf_haar.cpp</in>
              <in>perf_hog.cpp</in>
              <in>perf_hough.cpp</in>
              <in>perf_imgproc.cpp</in>
              <in>perf_match_template.cpp</in>
              <in>perf_matrix_operation.cpp</in>
              <in>perf_pyrdown.cpp</in>
              <in>perf_pyrup.cpp</in>
              <in>perf_split_merge.cpp</in>
              <in>perf_surf.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>utility.cpp</in>
              <in>utility.hpp</in>
            </df>
            <df name="src">
              <df name="kernels">
              </df>
              <in>arithm.cpp</in>
              <in>binarycaching.hpp</in>
              <in>blend.cpp</in>
              <in>brute_force_matcher.cpp</in>
              <in>build_warps.cpp</in>
              <in>canny.cpp</in>
              <in>color.cpp</in>
              <in>columnsum.cpp</in>
              <in>error.cpp</in>
              <in>fft.cpp</in>
              <in>filtering.cpp</in>
              <in>gemm.cpp</in>
              <in>haar.cpp</in>
              <in>hog.cpp</in>
              <in>hough.cpp</in>
              <in>imgproc.cpp</in>
              <in>initialization.cpp</in>
              <in>interpolate_frames.cpp</in>
              <in>match_template.cpp</in>
              <in>matrix_operations.cpp</in>
              <in>mcwutil.cpp</in>
              <in>mcwutil.hpp</in>
              <in>moments.cpp</in>
              <in>mssegmentation.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>pyrdown.cpp</in>
              <in>pyrlk.cpp</in>
              <in>pyrup.cpp</in>
              <in>safe_call.hpp</in>
              <in>split_merge.cpp</in>
              <in>surf.cpp</in>
            </df>
            <df name="test">
              <in>interpolation.hpp</in>
              <in>main.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>test_arithm.cpp</in>
              <in>test_blend.cpp</in>
              <in>test_brute_force_matcher.cpp</in>
              <in>test_canny.cpp</in>
              <in>test_color.cpp</in>
              <in>test_columnsum.cpp</in>
              <in>test_fft.cpp</in>
              <in>test_filters.cpp</in>
              <in>test_gemm.cpp</in>
              <in>test_haar.cpp</in>
              <in>test_hog.cpp</in>
              <in>test_hough.cpp</in>
              <in>test_imgproc.cpp</in>
              <in>test_match_template.cpp</in>
              <in>test_matrix_operation.cpp</in>
              <in>test_moments.cpp</in>
              <in>test_pyrdown.cpp</in>
              <in>test_pyrlk.cpp</in>
              <in>test_pyrup.cpp</in>
              <in>test_split_merge.cpp</in>
              <in>utility.cpp</in>
              <in>utility.hpp</in>
            </df>
          </df>
          <df name="photo">
            <df name="doc">
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="photo">
                  <in>photo.hpp</in>
                  <in>photo_c.h</in>
                </df>
                <in>photo.hpp</in>
              </df>
            </df>
            <df name="perf">
              <in>perf_inpaint.cpp</in>
              <in>perf_main.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
            </df>
            <df name="src">
              <in>arrays.hpp</in>
              <in>denoising.cpp</in>
              <in>fast_nlmeans_denoising_invoker.hpp</in>
              <in>fast_nlmeans_denoising_invoker_commons.hpp</in>
              <in>fast_nlmeans_multi_denoising_invoker.hpp</in>
              <in>inpaint.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
            </df>
            <df name="test">
              <in>test_denoising.cpp</in>
              <in>test_inpaint.cpp</in>
              <in>test_main.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
            </df>
          </df>
          <df name="python">
            <df name="src2">
              <in>cv2.cpp</in>
              <in>cv2.cv.hpp</in>
            </df>
            <df name="test">
            </df>
          </df>
          <df name="softcascade">
            <df name="doc">
            </df>
            <df name="include">
              <df name="opencv2">
                <in>softcascade.hpp</in>
              </df>
            </df>
            <df name="misc">
            </df>
            <df name="perf">
              <in>perf_cuda_softcascade.cpp</in>
              <in>perf_main.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
              <in>perf_softcascade.cpp</in>
            </df>
            <df name="src">
              <df name="cuda">
              </df>
              <in>cuda_invoker.hpp</in>
              <in>detector_cuda.cpp</in>
              <in>integral_channel_builder.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>soft_cascade_octave.cpp</in>
              <in>softcascade.cpp</in>
              <in>softcascade_init.cpp</in>
            </df>
            <df name="test">
              <in>test_channel_features.cpp</in>
              <in>test_cuda_softcascade.cpp</in>
              <in>test_main.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
              <in>test_softcascade.cpp</in>
              <in>test_training.cpp</in>
              <in>utility.cpp</in>
              <in>utility.hpp</in>
            </df>
          </df>
          <df name="stitching">
            <df name="doc">
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="stitching">
                  <df name="detail">
                    <in>autocalib.hpp</in>
                    <in>blenders.hpp</in>
                    <in>camera.hpp</in>
                    <in>exposure_compensate.hpp</in>
                    <in>matchers.hpp</in>
                    <in>motion_estimators.hpp</in>
                    <in>seam_finders.hpp</in>
                    <in>util.hpp</in>
                    <in>util_inl.hpp</in>
                    <in>warpers.hpp</in>
                    <in>warpers_inl.hpp</in>
                  </df>
                  <in>warpers.hpp</in>
                </df>
                <in>stitching.hpp</in>
              </df>
            </df>
            <df name="perf">
              <in>perf_main.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
              <in>perf_stich.cpp</in>
            </df>
            <df name="src">
              <in>autocalib.cpp</in>
              <in>blenders.cpp</in>
              <in>camera.cpp</in>
              <in>exposure_compensate.cpp</in>
              <in>matchers.cpp</in>
              <in>motion_estimators.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>seam_finders.cpp</in>
              <in>stitcher.cpp</in>
              <in>util.cpp</in>
              <in>warpers.cpp</in>
            </df>
            <df name="test">
              <in>test_blenders.cpp</in>
              <in>test_main.cpp</in>
              <in>test_matchers.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
            </df>
          </df>
          <df name="ts">
            <df name="include">
              <df name="opencv2">
                <df name="ts">
                  <in>ts_gtest.h</in>
                  <in>ts_perf.hpp</in>
                </df>
                <in>ts.hpp</in>
              </df>
            </df>
            <df name="misc">
            </df>
            <df name="src">
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>ts.cpp</in>
              <in>ts_arrtest.cpp</in>
              <in>ts_func.cpp</in>
              <in>ts_gtest.cpp</in>
              <in>ts_perf.cpp</in>
            </df>
          </df>
          <df name="video">
            <df name="doc">
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="video">
                  <in>background_segm.hpp</in>
                  <in>tracking.hpp</in>
                  <in>video.hpp</in>
                </df>
                <in>video.hpp</in>
              </df>
            </df>
            <df name="perf">
              <in>perf_ecc.cpp</in>
              <in>perf_main.cpp</in>
              <in>perf_optflowpyrlk.cpp</in>
              <in>perf_precomp.cpp</in>
              <in>perf_precomp.hpp</in>
              <in>perf_tvl1optflow.cpp</in>
            </df>
            <df name="src">
              <in>bgfg_gaussmix.cpp</in>
              <in>bgfg_gaussmix2.cpp</in>
              <in>bgfg_gmg.cpp</in>
              <in>camshift.cpp</in>
              <in>ecc.cpp</in>
              <in>kalman.cpp</in>
              <in>lkpyramid.cpp</in>
              <in>lkpyramid.hpp</in>
              <in>motempl.cpp</in>
              <in>optflowgf.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>simpleflow.cpp</in>
              <in>simpleflow.hpp</in>
              <in>tvl1flow.cpp</in>
              <in>video_init.cpp</in>
            </df>
            <df name="test">
              <in>test_accum.cpp</in>
              <in>test_backgroundsubtractor_gbh.cpp</in>
              <in>test_camshift.cpp</in>
              <in>test_ecc.cpp</in>
              <in>test_estimaterigid.cpp</in>
              <in>test_kalman.cpp</in>
              <in>test_main.cpp</in>
              <in>test_motiontemplates.cpp</in>
              <in>test_optflowpyrlk.cpp</in>
              <in>test_precomp.cpp</in>
              <in>test_precomp.hpp</in>
              <in>test_simpleflow.cpp</in>
              <in>test_tvl1optflow.cpp</in>
            </df>
          </df>
          <df name="videostab">
            <df name="doc">
            </df>
            <df name="include">
              <df name="opencv2">
                <df name="videostab">
                  <in>deblurring.hpp</in>
                  <in>fast_marching.hpp</in>
                  <in>fast_marching_inl.hpp</in>
                  <in>frame_source.hpp</in>
                  <in>global_motion.hpp</in>
                  <in>inpainting.hpp</in>
                  <in>log.hpp</in>
                  <in>motion_core.hpp</in>
                  <in>motion_stabilizing.hpp</in>
                  <in>optical_flow.hpp</in>
                  <in>outlier_rejection.hpp</in>
                  <in>ring_buffer.hpp</in>
                  <in>stabilizer.hpp</in>
                  <in>wobble_suppression.hpp</in>
                </df>
                <in>videostab.hpp</in>
              </df>
            </df>
            <df name="src">
              <in>clp.hpp</in>
              <in>deblurring.cpp</in>
              <in>fast_marching.cpp</in>
              <in>frame_source.cpp</in>
              <in>global_motion.cpp</in>
              <in>inpainting.cpp</in>
              <in>log.cpp</in>
              <in>motion_stabilizing.cpp</in>
              <in>optical_flow.cpp</in>
              <in>outlier_rejection.cpp</in>
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>stabilizer.cpp</in>
              <in>wobble_suppression.cpp</in>
            </df>
          </df>
          <df name="world">
            <df name="include">
              <df name="opencv2">
                <in>world.hpp</in>
              </df>
            </df>
            <df name="src">
              <in>precomp.cpp</in>
              <in>precomp.hpp</in>
              <in>world_init.cpp</in>
            </df>
          </df>
        </df>
        <df name="platforms">
          <df name="linux">
            <df name="scripts">
            </df>
          </df>
        </df>
        <df name="samples">
          <df name="android">
            <df name="15-puzzle">
              <df name="res">
                <df name="drawable">
                </df>
                <df name="layout">
                </df>
                <df name="menu">
                </df>
                <df name="values">
                </df>
              </df>
              <df name="src">
                <df name="org">
                  <df name="opencv">
                    <df name="samples">
                      <df name="puzzle15">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
            </df>
            <df name="color-blob-detection">
              <df name="res">
                <df name="drawable">
                </df>
                <df name="layout">
                </df>
                <df name="values">
                </df>
              </df>
              <df name="src">
                <df name="org">
                  <df name="opencv">
                    <df name="samples">
                      <df name="colorblobdetect">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
            </df>
            <df name="face-detection">
              <df name="jni">
                <in>DetectionBasedTracker_jni.cpp</in>
                <in>DetectionBasedTracker_jni.h</in>
              </df>
              <df name="res">
                <df name="drawable">
                </df>
                <df name="layout">
                </df>
                <df name="raw">
                </df>
                <df name="values">
                </df>
              </df>
              <df name="src">
                <df name="org">
                  <df name="opencv">
                    <df name="samples">
                      <df name="facedetect">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
            </df>
            <df name="hello-android">
              <in>main.cpp</in>
            </df>
            <df name="image-manipulations">
              <df name="res">
                <df name="drawable">
                </df>
                <df name="layout">
                </df>
                <df name="values">
                </df>
              </df>
              <df name="src">
                <df name="org">
                  <df name="opencv">
                    <df name="samples">
                      <df name="imagemanipulations">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
            </df>
            <df name="tutorial-1-camerapreview">
              <df name="res">
                <df name="drawable">
                </df>
                <df name="layout">
                </df>
                <df name="values">
                </df>
              </df>
              <df name="src">
                <df name="org">
                  <df name="opencv">
                    <df name="samples">
                      <df name="tutorial1">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
            </df>
            <df name="tutorial-2-mixedprocessing">
              <df name="jni">
                <in>jni_part.cpp</in>
              </df>
              <df name="res">
                <df name="drawable">
                </df>
                <df name="layout">
                </df>
                <df name="values">
                </df>
              </df>
              <df name="src">
                <df name="org">
                  <df name="opencv">
                    <df name="samples">
                      <df name="tutorial2">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
            </df>
            <df name="tutorial-3-cameracontrol">
              <df name="res">
                <df name="drawable">
                </df>
                <df name="layout">
                </df>
                <df name="values">
                </df>
              </df>
              <df name="src">
                <df name="org">
                  <df name="opencv">
                    <df name="samples">
                      <df name="tutorial3">
                      </df>
                    </df>
                  </df>
                </df>
              </df>
            </df>
          </df>
          <df name="c">
            <df name="example_cmake">
              <in>minarea.c</in>
            </df>
            <in>adaptiveskindetector.cpp</in>
            <in>bgfg_codebook.cpp</in>
            <in>blobtrack_sample.cpp</in>
            <in>contours.c</in>
            <in>convert_cascade.c</in>
            <in>delaunay.c</in>
            <in>facedetect.cpp</in>
            <in>fback_c.c</in>
            <in>find_obj.cpp</in>
            <in>find_obj_calonder.cpp</in>
            <in>find_obj_ferns.cpp</in>
            <in>latentsvmdetect.cpp</in>
            <in>morphology.c</in>
            <in>motempl.c</in>
            <in>mser_sample.cpp</in>
            <in>mushroom.cpp</in>
            <in>one_way_sample.cpp</in>
            <in>polar_transforms.c</in>
            <in>pyramid_segmentation.c</in>
            <in>smiledetect.cpp</in>
            <in>tree_engine.cpp</in>
          </df>
          <df name="cpp">
            <df name="fabmap">
            </df>
            <df name="matching_to_many_images">
              <df name="train">
              </df>
            </df>
            <df name="Qt_sample">
              <in>main.cpp</in>
            </df>
            <df name="rgbdodometry">
            </df>
            <df name="tutorial_code">
              <df name="calib3d">
                <df name="camera_calibration">
                  <in>camera_calibration.cpp</in>
                </df>
                <df name="stereoBM">
                  <in>SBM_Sample.cpp</in>
                </df>
              </df>
              <df name="contrib">
                <in>retina_tutorial.cpp</in>
              </df>
              <df name="core">
                <df name="discrete_fourier_transform">
                  <in>discrete_fourier_transform.cpp</in>
                </df>
                <df name="file_input_output">
                  <in>file_input_output.cpp</in>
                </df>
                <df name="how_to_scan_images">
                  <in>how_to_scan_images.cpp</in>
                </df>
                <df name="interoperability_with_OpenCV_1">
                  <in>interoperability_with_OpenCV_1.cpp</in>
                </df>
                <df name="mat_mask_operations">
                  <in>mat_mask_operations.cpp</in>
                </df>
                <df name="mat_the_basic_image_container">
                  <in>mat_the_basic_image_container.cpp</in>
                </df>
                <df name="Matrix">
                  <in>Drawing_1.cpp</in>
                  <in>Drawing_2.cpp</in>
                </df>
              </df>
              <df name="features2D">
                <in>SURF_FlannMatcher.cpp</in>
                <in>SURF_Homography.cpp</in>
                <in>SURF_descriptor.cpp</in>
                <in>SURF_detector.cpp</in>
              </df>
              <df name="gpu">
                <df name="gpu-basics-similarity">
                  <in>gpu-basics-similarity.cpp</in>
                </df>
              </df>
              <df name="HighGUI">
                <df name="video-input-psnr-ssim">
                  <df name="video">
                  </df>
                  <in>video-input-psnr-ssim.cpp</in>
                </df>
                <df name="video-write">
                  <in>video-write.cpp</in>
                </df>
                <in>AddingImagesTrackbar.cpp</in>
                <in>BasicLinearTransformsTrackbar.cpp</in>
              </df>
              <df name="Histograms_Matching">
                <in>EqualizeHist_Demo.cpp</in>
                <in>MatchTemplate_Demo.cpp</in>
                <in>calcBackProject_Demo1.cpp</in>
                <in>calcBackProject_Demo2.cpp</in>
                <in>calcHist_Demo.cpp</in>
                <in>compareHist_Demo.cpp</in>
              </df>
              <df name="images">
              </df>
              <df name="ImgProc">
                <in>AddingImages.cpp</in>
                <in>BasicLinearTransforms.cpp</in>
                <in>Morphology_1.cpp</in>
                <in>Morphology_2.cpp</in>
                <in>Pyramids.cpp</in>
                <in>Smoothing.cpp</in>
                <in>Threshold.cpp</in>
              </df>
              <df name="ImgTrans">
                <in>CannyDetector_Demo.cpp</in>
                <in>Geometric_Transforms_Demo.cpp</in>
                <in>HoughCircle_Demo.cpp</in>
                <in>HoughLines_Demo.cpp</in>
                <in>Laplace_Demo.cpp</in>
                <in>Remap_Demo.cpp</in>
                <in>Sobel_Demo.cpp</in>
                <in>copyMakeBorder_demo.cpp</in>
                <in>filter2D_demo.cpp</in>
              </df>
              <df name="introduction">
                <df name="display_image">
                  <in>display_image.cpp</in>
                </df>
                <df name="windows_visual_studio_Opencv">
                  <in>Test.cpp</in>
                </df>
              </df>
              <df name="ml">
                <df name="introduction_to_svm">
                  <in>introduction_to_svm.cpp</in>
                </df>
                <df name="non_linear_svms">
                  <in>non_linear_svms.cpp</in>
                </df>
              </df>
              <df name="objectDetection">
                <in>objectDetection.cpp</in>
                <in>objectDetection2.cpp</in>
              </df>
              <df name="ShapeDescriptors">
                <in>findContours_demo.cpp</in>
                <in>generalContours_demo1.cpp</in>
                <in>generalContours_demo2.cpp</in>
                <in>hull_demo.cpp</in>
                <in>moments_demo.cpp</in>
                <in>pointPolygonTest_demo.cpp</in>
              </df>
              <df name="TrackingMotion">
                <in>cornerDetector_Demo.cpp</in>
                <in>cornerHarris_Demo.cpp</in>
                <in>cornerSubPix_Demo.cpp</in>
                <in>goodFeaturesToTrack_Demo.cpp</in>
              </df>
            </df>
            <in>3calibration.cpp</in>
            <in>OpenEXRimages_HighDynamicRange_Retina_toneMapping.cpp</in>
            <in>OpenEXRimages_HighDynamicRange_Retina_toneMapping_video.cpp</in>
            <in>bagofwords_classification.cpp</in>
            <in>bgfg_gmg.cpp</in>
            <in>bgfg_segm.cpp</in>
            <in>brief_match_test.cpp</in>
            <in>build3dmodel.cpp</in>
            <in>calibration.cpp</in>
            <in>calibration_artificial.cpp</in>
            <in>camshiftdemo.cpp</in>
            <in>chamfer.cpp</in>
            <in>connected_components.cpp</in>
            <in>contours2.cpp</in>
            <in>convexhull.cpp</in>
            <in>cout_mat.cpp</in>
            <in>dbt_face_detection.cpp</in>
            <in>delaunay2.cpp</in>
            <in>demhist.cpp</in>
            <in>descriptor_extractor_matcher.cpp</in>
            <in>detection_based_tracker_sample.cpp</in>
            <in>detector_descriptor_evaluation.cpp</in>
            <in>detector_descriptor_matcher_evaluation.cpp</in>
            <in>dft.cpp</in>
            <in>distrans.cpp</in>
            <in>drawing.cpp</in>
            <in>edge.cpp</in>
            <in>em.cpp</in>
            <in>fabmap_sample.cpp</in>
            <in>facerec_demo.cpp</in>
            <in>fback.cpp</in>
            <in>ffilldemo.cpp</in>
            <in>filestorage.cpp</in>
            <in>fitellipse.cpp</in>
            <in>freak_demo.cpp</in>
            <in>gencolors.cpp</in>
            <in>generic_descriptor_match.cpp</in>
            <in>grabcut.cpp</in>
            <in>houghcircles.cpp</in>
            <in>houghlines.cpp</in>
            <in>hybridtrackingsample.cpp</in>
            <in>image.cpp</in>
            <in>image_alignment.cpp</in>
            <in>imagelist_creator.cpp</in>
            <in>inpaint.cpp</in>
            <in>kalman.cpp</in>
            <in>kmeans.cpp</in>
            <in>laplace.cpp</in>
            <in>latentsvm_multidetect.cpp</in>
            <in>letter_recog.cpp</in>
            <in>linemod.cpp</in>
            <in>lkdemo.cpp</in>
            <in>logpolar_bsm.cpp</in>
            <in>matcher_simple.cpp</in>
            <in>matching_to_many_images.cpp</in>
            <in>meanshift_segmentation.cpp</in>
            <in>minarea.cpp</in>
            <in>morphology2.cpp</in>
            <in>opencv_version.cpp</in>
            <in>openni_capture.cpp</in>
            <in>pca.cpp</in>
            <in>peopledetect.cpp</in>
            <in>phase_corr.cpp</in>
            <in>points_classifier.cpp</in>
            <in>retinaDemo.cpp</in>
            <in>rgbdodometry.cpp</in>
            <in>segment_objects.cpp</in>
            <in>select3dobj.cpp</in>
            <in>simpleflow_demo.cpp</in>
            <in>squares.cpp</in>
            <in>starter_imagelist.cpp</in>
            <in>starter_video.cpp</in>
            <in>stereo_calib.cpp</in>
            <in>stereo_match.cpp</in>
            <in>stitching.cpp</in>
            <in>stitching_detailed.cpp</in>
            <in>tvl1_optical_flow.cpp</in>
            <in>video_dmtx.cpp</in>
            <in>video_homography.cpp</in>
            <in>videostab.cpp</in>
            <in>watershed.cpp</in>
          </df>
          <df name="gpu">
            <df name="performance">
              <in>performance.cpp</in>
              <in>performance.h</in>
              <in>tests.cpp</in>
            </df>
            <in>alpha_comp.cpp</in>
            <in>bgfg_segm.cpp</in>
            <in>brox_optical_flow.cpp</in>
            <in>cascadeclassifier.cpp</in>
            <in>cascadeclassifier_nvidia_api.cpp</in>
            <in>driver_api_multi.cpp</in>
            <in>driver_api_stereo_multi.cpp</in>
            <in>farneback_optical_flow.cpp</in>
            <in>generalized_hough.cpp</in>
            <in>hog.cpp</in>
            <in>houghlines.cpp</in>
            <in>morphology.cpp</in>
            <in>multi.cpp</in>
            <in>opengl.cpp</in>
            <in>optical_flow.cpp</in>
            <in>opticalflow_nvidia_api.cpp</in>
            <in>pyrlk_optical_flow.cpp</in>
            <in>softcascade.cpp</in>
            <in>stereo_match.cpp</in>
            <in>stereo_multi.cpp</in>
            <in>surf_keypoint_matcher.cpp</in>
            <in>video_reader.cpp</in>
            <in>video_writer.cpp</in>
          </df>
          <df name="java">
            <df name="ant">
              <df name="src">
              </df>
            </df>
            <df name="eclipse">
              <df name="HelloCV">
                <df name="src">
                </df>
              </df>
            </df>
            <df name="sbt">
              <df name="lib">
              </df>
              <df name="project">
              </df>
              <df name="sbt">
              </df>
              <df name="src">
                <df name="main">
                  <df name="java">
                  </df>
                  <df name="resources">
                  </df>
                  <df name="scala">
                  </df>
                </df>
              </df>
            </df>
          </df>
          <df name="MacOSX">
            <df name="FaceTracker">
              <df name="FaceTracker.xcodeproj">
                <df name="project.xcworkspace">
                  <df name="xcuserdata">
                    <df name="Administrator.xcuserdatad">
                    </df>
                  </df>
                </df>
                <df name="xcuserdata">
                  <df name="Administrator.xcuserdatad">
                    <df name="xcschemes">
                    </df>
                  </df>
                </df>
              </df>
              <in>FaceTracker.cpp</in>
            </df>
          </df>
          <df name="ocl">
            <in>facedetect.cpp</in>
            <in>hog.cpp</in>
            <in>performance.cpp</in>
            <in>squares.cpp</in>
            <in>surf_matcher.cpp</in>
          </df>
          <df name="python">
          </df>
          <df name="python2">
            <df name="data">
            </df>
          </df>
        </df>
      </df>
      <df name="OpenCVbuild">
        <df name="build">
          <df name="iPhoneOS-armv7">
            <df name="3rdparty">
              <df name="lib">
                <df name="Release">
                </df>
              </df>
              <df name="zlib">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="zlib.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="UninstalledProducts">
                </df>
                <df name="zlib.xcodeproj">
                </df>
                <in>zconf.h</in>
              </df>
            </df>
            <df name="CMakeFiles">
              <df name="2.8.10.2">
                <df name="CompilerIdC">
                  <df name="CompilerIdC.build">
                    <df name="Debug">
                      <df name="CompilerIdC.build">
                        <df name="Objects-normal">
                          <df name="i386">
                          </df>
                        </df>
                      </df>
                    </df>
                  </df>
                  <df name="CompilerIdC.xcodeproj">
                  </df>
                  <in>CMakeCCompilerId.c</in>
                </df>
                <df name="CompilerIdCXX">
                  <df name="CompilerIdCXX.build">
                    <df name="Debug">
                      <df name="CompilerIdCXX.build">
                        <df name="Objects-normal">
                          <df name="i386">
                          </df>
                        </df>
                      </df>
                    </df>
                  </df>
                  <df name="CompilerIdCXX.xcodeproj">
                  </df>
                  <in>CMakeCXXCompilerId.cpp</in>
                </df>
              </df>
              <df name="CheckTypeSize">
                <in>OFF64_T.c</in>
              </df>
              <df name="CMakeTmp">
              </df>
            </df>
            <df name="CMakeScripts">
            </df>
            <df name="data">
              <df name="CMakeFiles">
              </df>
            </df>
            <df name="doc">
              <df name="CMakeFiles">
              </df>
            </df>
            <df name="include">
              <df name="CMakeFiles">
              </df>
            </df>
            <df name="install">
              <df name="include">
                <df name="opencv">
                  <in>cv.h</in>
                  <in>cv.hpp</in>
                  <in>cvaux.h</in>
                  <in>cvaux.hpp</in>
                  <in>cvwimage.h</in>
                  <in>cxcore.h</in>
                  <in>cxcore.hpp</in>
                  <in>cxeigen.hpp</in>
                  <in>cxmisc.h</in>
                  <in>highgui.h</in>
                  <in>ml.h</in>
                </df>
                <df name="opencv2">
                  <df name="calib3d">
                    <in>calib3d.hpp</in>
                  </df>
                  <df name="contrib">
                    <in>contrib.hpp</in>
                    <in>detection_based_tracker.hpp</in>
                    <in>hybridtracker.hpp</in>
                    <in>openfabmap.hpp</in>
                    <in>retina.hpp</in>
                  </df>
                  <df name="core">
                    <in>core.hpp</in>
                    <in>core_c.h</in>
                    <in>cuda_devptrs.hpp</in>
                    <in>eigen.hpp</in>
                    <in>gpumat.hpp</in>
                    <in>internal.hpp</in>
                    <in>mat.hpp</in>
                    <in>opengl.hpp</in>
                    <in>operations.hpp</in>
                    <in>stream_accessor.hpp</in>
                    <in>types_c.h</in>
                    <in>version.hpp</in>
                    <in>wimage.hpp</in>
                  </df>
                  <df name="features2d">
                    <in>features2d.hpp</in>
                  </df>
                  <df name="flann">
                    <in>all_indices.h</in>
                    <in>allocator.h</in>
                    <in>any.h</in>
                    <in>autotuned_index.h</in>
                    <in>composite_index.h</in>
                    <in>config.h</in>
                    <in>defines.h</in>
                    <in>dist.h</in>
                    <in>dummy.h</in>
                    <in>dynamic_bitset.h</in>
                    <in>flann.hpp</in>
                    <in>flann_base.hpp</in>
                    <in>general.h</in>
                    <in>ground_truth.h</in>
                    <in>hdf5.h</in>
                    <in>heap.h</in>
                    <in>hierarchical_clustering_index.h</in>
                    <in>index_testing.h</in>
                    <in>kdtree_index.h</in>
                    <in>kdtree_single_index.h</in>
                    <in>kmeans_index.h</in>
                    <in>linear_index.h</in>
                    <in>logger.h</in>
                    <in>lsh_index.h</in>
                    <in>lsh_table.h</in>
                    <in>matrix.h</in>
                    <in>miniflann.hpp</in>
                    <in>nn_index.h</in>
                    <in>object_factory.h</in>
                    <in>params.h</in>
                    <in>random.h</in>
                    <in>result_set.h</in>
                    <in>sampling.h</in>
                    <in>saving.h</in>
                    <in>simplex_downhill.h</in>
                    <in>timer.h</in>
                  </df>
                  <df name="highgui">
                    <in>cap_ios.h</in>
                    <in>highgui.hpp</in>
                    <in>highgui_c.h</in>
                  </df>
                  <df name="imgproc">
                    <in>imgproc.hpp</in>
                    <in>imgproc_c.h</in>
                    <in>types_c.h</in>
                  </df>
                  <df name="legacy">
                    <in>blobtrack.hpp</in>
                    <in>compat.hpp</in>
                    <in>legacy.hpp</in>
                    <in>streams.hpp</in>
                  </df>
                  <df name="ml">
                    <in>ml.hpp</in>
                  </df>
                  <df name="nonfree">
                    <in>features2d.hpp</in>
                    <in>nonfree.hpp</in>
                  </df>
                  <df name="objdetect">
                    <in>objdetect.hpp</in>
                  </df>
                  <df name="photo">
                    <in>photo.hpp</in>
                    <in>photo_c.h</in>
                  </df>
                  <df name="stitching">
                    <df name="detail">
                      <in>autocalib.hpp</in>
                      <in>blenders.hpp</in>
                      <in>camera.hpp</in>
                      <in>exposure_compensate.hpp</in>
                      <in>matchers.hpp</in>
                      <in>motion_estimators.hpp</in>
                      <in>seam_finders.hpp</in>
                      <in>util.hpp</in>
                      <in>util_inl.hpp</in>
                      <in>warpers.hpp</in>
                      <in>warpers_inl.hpp</in>
                    </df>
                    <in>warpers.hpp</in>
                  </df>
                  <df name="video">
                    <in>background_segm.hpp</in>
                    <in>tracking.hpp</in>
                    <in>video.hpp</in>
                  </df>
                  <df name="videostab">
                    <in>deblurring.hpp</in>
                    <in>fast_marching.hpp</in>
                    <in>fast_marching_inl.hpp</in>
                    <in>frame_source.hpp</in>
                    <in>global_motion.hpp</in>
                    <in>inpainting.hpp</in>
                    <in>log.hpp</in>
                    <in>motion_core.hpp</in>
                    <in>motion_stabilizing.hpp</in>
                    <in>optical_flow.hpp</in>
                    <in>outlier_rejection.hpp</in>
                    <in>ring_buffer.hpp</in>
                    <in>stabilizer.hpp</in>
                    <in>wobble_suppression.hpp</in>
                  </df>
                  <in>opencv.hpp</in>
                  <in>opencv_modules.hpp</in>
                </df>
              </df>
              <df name="lib">
                <df name="pkgconfig">
                </df>
              </df>
              <df name="share">
                <df name="OpenCV">
                  <df name="haarcascades">
                  </df>
                  <df name="lbpcascades">
                  </df>
                </df>
              </df>
            </df>
            <df name="junk">
            </df>
            <df name="lib">
              <df name="Release">
              </df>
            </df>
            <df name="modules">
              <df name="androidcamera">
              </df>
              <df name="calib3d">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_calib3d.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_calib3d.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="CMakeFiles">
              </df>
              <df name="contrib">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_contrib.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_contrib.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="core">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_core.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_core.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="features2d">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_features2d.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_features2d.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="flann">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_flann.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_flann.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="gpu">
              </df>
              <df name="highgui">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_highgui.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_highgui.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="imgproc">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_imgproc.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_imgproc.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="java">
              </df>
              <df name="legacy">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_legacy.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_legacy.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="ml">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_ml.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_ml.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="nonfree">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_nonfree.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_nonfree.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="objdetect">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_objdetect.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_objdetect.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="ocl">
              </df>
              <df name="photo">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_photo.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_photo.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="python">
              </df>
              <df name="softcascade">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_softcascade.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_softcascade.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="stitching">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_stitching.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_stitching.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="ts">
              </df>
              <df name="video">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_video.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_video.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="videostab">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_videostab.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_videostab.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="world">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_world.build">
                      <df name="Objects-normal">
                        <df name="armv7">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_world.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
            </df>
            <df name="OpenCV.build">
              <df name="Release-iphoneos">
                <df name="ALL_BUILD.build">
                </df>
                <df name="install.build">
                </df>
                <df name="ZERO_CHECK.build">
                </df>
              </df>
            </df>
            <df name="OpenCV.xcodeproj">
            </df>
            <df name="opencv2">
              <in>opencv_modules.hpp</in>
            </df>
            <df name="unix-install">
            </df>
            <in>cvconfig.h</in>
          </df>
          <df name="iPhoneOS-armv7s">
            <df name="3rdparty">
              <df name="lib">
                <df name="Release">
                </df>
              </df>
              <df name="zlib">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="zlib.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="UninstalledProducts">
                </df>
                <df name="zlib.xcodeproj">
                </df>
                <in>zconf.h</in>
              </df>
            </df>
            <df name="CMakeFiles">
              <df name="2.8.10.2">
                <df name="CompilerIdC">
                  <df name="CompilerIdC.build">
                    <df name="Debug">
                      <df name="CompilerIdC.build">
                        <df name="Objects-normal">
                          <df name="i386">
                          </df>
                        </df>
                      </df>
                    </df>
                  </df>
                  <df name="CompilerIdC.xcodeproj">
                  </df>
                  <in>CMakeCCompilerId.c</in>
                </df>
                <df name="CompilerIdCXX">
                  <df name="CompilerIdCXX.build">
                    <df name="Debug">
                      <df name="CompilerIdCXX.build">
                        <df name="Objects-normal">
                          <df name="i386">
                          </df>
                        </df>
                      </df>
                    </df>
                  </df>
                  <df name="CompilerIdCXX.xcodeproj">
                  </df>
                  <in>CMakeCXXCompilerId.cpp</in>
                </df>
              </df>
              <df name="CheckTypeSize">
                <in>OFF64_T.c</in>
              </df>
              <df name="CMakeTmp">
              </df>
            </df>
            <df name="CMakeScripts">
            </df>
            <df name="data">
              <df name="CMakeFiles">
              </df>
            </df>
            <df name="doc">
              <df name="CMakeFiles">
              </df>
            </df>
            <df name="include">
              <df name="CMakeFiles">
              </df>
            </df>
            <df name="install">
              <df name="include">
                <df name="opencv">
                  <in>cv.h</in>
                  <in>cv.hpp</in>
                  <in>cvaux.h</in>
                  <in>cvaux.hpp</in>
                  <in>cvwimage.h</in>
                  <in>cxcore.h</in>
                  <in>cxcore.hpp</in>
                  <in>cxeigen.hpp</in>
                  <in>cxmisc.h</in>
                  <in>highgui.h</in>
                  <in>ml.h</in>
                </df>
                <df name="opencv2">
                  <df name="calib3d">
                    <in>calib3d.hpp</in>
                  </df>
                  <df name="contrib">
                    <in>contrib.hpp</in>
                    <in>detection_based_tracker.hpp</in>
                    <in>hybridtracker.hpp</in>
                    <in>openfabmap.hpp</in>
                    <in>retina.hpp</in>
                  </df>
                  <df name="core">
                    <in>core.hpp</in>
                    <in>core_c.h</in>
                    <in>cuda_devptrs.hpp</in>
                    <in>eigen.hpp</in>
                    <in>gpumat.hpp</in>
                    <in>internal.hpp</in>
                    <in>mat.hpp</in>
                    <in>opengl.hpp</in>
                    <in>operations.hpp</in>
                    <in>stream_accessor.hpp</in>
                    <in>types_c.h</in>
                    <in>version.hpp</in>
                    <in>wimage.hpp</in>
                  </df>
                  <df name="features2d">
                    <in>features2d.hpp</in>
                  </df>
                  <df name="flann">
                    <in>all_indices.h</in>
                    <in>allocator.h</in>
                    <in>any.h</in>
                    <in>autotuned_index.h</in>
                    <in>composite_index.h</in>
                    <in>config.h</in>
                    <in>defines.h</in>
                    <in>dist.h</in>
                    <in>dummy.h</in>
                    <in>dynamic_bitset.h</in>
                    <in>flann.hpp</in>
                    <in>flann_base.hpp</in>
                    <in>general.h</in>
                    <in>ground_truth.h</in>
                    <in>hdf5.h</in>
                    <in>heap.h</in>
                    <in>hierarchical_clustering_index.h</in>
                    <in>index_testing.h</in>
                    <in>kdtree_index.h</in>
                    <in>kdtree_single_index.h</in>
                    <in>kmeans_index.h</in>
                    <in>linear_index.h</in>
                    <in>logger.h</in>
                    <in>lsh_index.h</in>
                    <in>lsh_table.h</in>
                    <in>matrix.h</in>
                    <in>miniflann.hpp</in>
                    <in>nn_index.h</in>
                    <in>object_factory.h</in>
                    <in>params.h</in>
                    <in>random.h</in>
                    <in>result_set.h</in>
                    <in>sampling.h</in>
                    <in>saving.h</in>
                    <in>simplex_downhill.h</in>
                    <in>timer.h</in>
                  </df>
                  <df name="highgui">
                    <in>cap_ios.h</in>
                    <in>highgui.hpp</in>
                    <in>highgui_c.h</in>
                  </df>
                  <df name="imgproc">
                    <in>imgproc.hpp</in>
                    <in>imgproc_c.h</in>
                    <in>types_c.h</in>
                  </df>
                  <df name="legacy">
                    <in>blobtrack.hpp</in>
                    <in>compat.hpp</in>
                    <in>legacy.hpp</in>
                    <in>streams.hpp</in>
                  </df>
                  <df name="ml">
                    <in>ml.hpp</in>
                  </df>
                  <df name="nonfree">
                    <in>features2d.hpp</in>
                    <in>nonfree.hpp</in>
                  </df>
                  <df name="objdetect">
                    <in>objdetect.hpp</in>
                  </df>
                  <df name="photo">
                    <in>photo.hpp</in>
                    <in>photo_c.h</in>
                  </df>
                  <df name="stitching">
                    <df name="detail">
                      <in>autocalib.hpp</in>
                      <in>blenders.hpp</in>
                      <in>camera.hpp</in>
                      <in>exposure_compensate.hpp</in>
                      <in>matchers.hpp</in>
                      <in>motion_estimators.hpp</in>
                      <in>seam_finders.hpp</in>
                      <in>util.hpp</in>
                      <in>util_inl.hpp</in>
                      <in>warpers.hpp</in>
                      <in>warpers_inl.hpp</in>
                    </df>
                    <in>warpers.hpp</in>
                  </df>
                  <df name="video">
                    <in>background_segm.hpp</in>
                    <in>tracking.hpp</in>
                    <in>video.hpp</in>
                  </df>
                  <df name="videostab">
                    <in>deblurring.hpp</in>
                    <in>fast_marching.hpp</in>
                    <in>fast_marching_inl.hpp</in>
                    <in>frame_source.hpp</in>
                    <in>global_motion.hpp</in>
                    <in>inpainting.hpp</in>
                    <in>log.hpp</in>
                    <in>motion_core.hpp</in>
                    <in>motion_stabilizing.hpp</in>
                    <in>optical_flow.hpp</in>
                    <in>outlier_rejection.hpp</in>
                    <in>ring_buffer.hpp</in>
                    <in>stabilizer.hpp</in>
                    <in>wobble_suppression.hpp</in>
                  </df>
                  <in>opencv.hpp</in>
                  <in>opencv_modules.hpp</in>
                </df>
              </df>
              <df name="lib">
                <df name="pkgconfig">
                </df>
              </df>
              <df name="share">
                <df name="OpenCV">
                  <df name="haarcascades">
                  </df>
                  <df name="lbpcascades">
                  </df>
                </df>
              </df>
            </df>
            <df name="junk">
            </df>
            <df name="lib">
              <df name="Release">
              </df>
            </df>
            <df name="modules">
              <df name="androidcamera">
              </df>
              <df name="calib3d">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_calib3d.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_calib3d.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="CMakeFiles">
              </df>
              <df name="contrib">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_contrib.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_contrib.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="core">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_core.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_core.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="features2d">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_features2d.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_features2d.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="flann">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_flann.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_flann.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="gpu">
              </df>
              <df name="highgui">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_highgui.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_highgui.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="imgproc">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_imgproc.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_imgproc.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="java">
              </df>
              <df name="legacy">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_legacy.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_legacy.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="ml">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_ml.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_ml.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="nonfree">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_nonfree.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_nonfree.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="objdetect">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_objdetect.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_objdetect.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="ocl">
              </df>
              <df name="photo">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_photo.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_photo.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="python">
              </df>
              <df name="softcascade">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_softcascade.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_softcascade.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="stitching">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_stitching.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_stitching.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="ts">
              </df>
              <df name="video">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_video.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_video.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="videostab">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_videostab.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_videostab.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="world">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphoneos">
                    <df name="opencv_world.build">
                      <df name="Objects-normal">
                        <df name="armv7s">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_world.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
            </df>
            <df name="OpenCV.build">
              <df name="Release-iphoneos">
                <df name="ALL_BUILD.build">
                </df>
                <df name="install.build">
                </df>
                <df name="ZERO_CHECK.build">
                </df>
              </df>
            </df>
            <df name="OpenCV.xcodeproj">
              <df name="project.xcworkspace">
                <df name="xcuserdata">
                  <df name="Administrator.xcuserdatad">
                  </df>
                </df>
              </df>
              <df name="xcuserdata">
                <df name="Administrator.xcuserdatad">
                  <df name="xcschemes">
                  </df>
                </df>
              </df>
            </df>
            <df name="opencv2">
              <in>opencv_modules.hpp</in>
            </df>
            <df name="unix-install">
            </df>
            <in>cvconfig.h</in>
          </df>
          <df name="iPhoneSimulator-i386">
            <df name="3rdparty">
              <df name="lib">
                <df name="Release">
                </df>
              </df>
              <df name="zlib">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="zlib.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="UninstalledProducts">
                </df>
                <df name="zlib.xcodeproj">
                </df>
                <in>zconf.h</in>
              </df>
            </df>
            <df name="CMakeFiles">
              <df name="2.8.10.2">
                <df name="CompilerIdC">
                  <df name="CompilerIdC.build">
                    <df name="Debug">
                      <df name="CompilerIdC.build">
                        <df name="Objects-normal">
                          <df name="i386">
                          </df>
                        </df>
                      </df>
                    </df>
                  </df>
                  <df name="CompilerIdC.xcodeproj">
                  </df>
                  <in>CMakeCCompilerId.c</in>
                </df>
                <df name="CompilerIdCXX">
                  <df name="CompilerIdCXX.build">
                    <df name="Debug">
                      <df name="CompilerIdCXX.build">
                        <df name="Objects-normal">
                          <df name="i386">
                          </df>
                        </df>
                      </df>
                    </df>
                  </df>
                  <df name="CompilerIdCXX.xcodeproj">
                  </df>
                  <in>CMakeCXXCompilerId.cpp</in>
                </df>
              </df>
              <df name="CheckTypeSize">
                <in>OFF64_T.c</in>
              </df>
              <df name="CMakeTmp">
              </df>
            </df>
            <df name="CMakeScripts">
            </df>
            <df name="data">
              <df name="CMakeFiles">
              </df>
            </df>
            <df name="doc">
              <df name="CMakeFiles">
              </df>
            </df>
            <df name="include">
              <df name="CMakeFiles">
              </df>
            </df>
            <df name="install">
              <df name="include">
                <df name="opencv">
                  <in>cv.h</in>
                  <in>cv.hpp</in>
                  <in>cvaux.h</in>
                  <in>cvaux.hpp</in>
                  <in>cvwimage.h</in>
                  <in>cxcore.h</in>
                  <in>cxcore.hpp</in>
                  <in>cxeigen.hpp</in>
                  <in>cxmisc.h</in>
                  <in>highgui.h</in>
                  <in>ml.h</in>
                </df>
                <df name="opencv2">
                  <df name="calib3d">
                    <in>calib3d.hpp</in>
                  </df>
                  <df name="contrib">
                    <in>contrib.hpp</in>
                    <in>detection_based_tracker.hpp</in>
                    <in>hybridtracker.hpp</in>
                    <in>openfabmap.hpp</in>
                    <in>retina.hpp</in>
                  </df>
                  <df name="core">
                    <in>core.hpp</in>
                    <in>core_c.h</in>
                    <in>cuda_devptrs.hpp</in>
                    <in>eigen.hpp</in>
                    <in>gpumat.hpp</in>
                    <in>internal.hpp</in>
                    <in>mat.hpp</in>
                    <in>opengl.hpp</in>
                    <in>operations.hpp</in>
                    <in>stream_accessor.hpp</in>
                    <in>types_c.h</in>
                    <in>version.hpp</in>
                    <in>wimage.hpp</in>
                  </df>
                  <df name="features2d">
                    <in>features2d.hpp</in>
                  </df>
                  <df name="flann">
                    <in>all_indices.h</in>
                    <in>allocator.h</in>
                    <in>any.h</in>
                    <in>autotuned_index.h</in>
                    <in>composite_index.h</in>
                    <in>config.h</in>
                    <in>defines.h</in>
                    <in>dist.h</in>
                    <in>dummy.h</in>
                    <in>dynamic_bitset.h</in>
                    <in>flann.hpp</in>
                    <in>flann_base.hpp</in>
                    <in>general.h</in>
                    <in>ground_truth.h</in>
                    <in>hdf5.h</in>
                    <in>heap.h</in>
                    <in>hierarchical_clustering_index.h</in>
                    <in>index_testing.h</in>
                    <in>kdtree_index.h</in>
                    <in>kdtree_single_index.h</in>
                    <in>kmeans_index.h</in>
                    <in>linear_index.h</in>
                    <in>logger.h</in>
                    <in>lsh_index.h</in>
                    <in>lsh_table.h</in>
                    <in>matrix.h</in>
                    <in>miniflann.hpp</in>
                    <in>nn_index.h</in>
                    <in>object_factory.h</in>
                    <in>params.h</in>
                    <in>random.h</in>
                    <in>result_set.h</in>
                    <in>sampling.h</in>
                    <in>saving.h</in>
                    <in>simplex_downhill.h</in>
                    <in>timer.h</in>
                  </df>
                  <df name="highgui">
                    <in>cap_ios.h</in>
                    <in>highgui.hpp</in>
                    <in>highgui_c.h</in>
                  </df>
                  <df name="imgproc">
                    <in>imgproc.hpp</in>
                    <in>imgproc_c.h</in>
                    <in>types_c.h</in>
                  </df>
                  <df name="legacy">
                    <in>blobtrack.hpp</in>
                    <in>compat.hpp</in>
                    <in>legacy.hpp</in>
                    <in>streams.hpp</in>
                  </df>
                  <df name="ml">
                    <in>ml.hpp</in>
                  </df>
                  <df name="nonfree">
                    <in>features2d.hpp</in>
                    <in>nonfree.hpp</in>
                  </df>
                  <df name="objdetect">
                    <in>objdetect.hpp</in>
                  </df>
                  <df name="photo">
                    <in>photo.hpp</in>
                    <in>photo_c.h</in>
                  </df>
                  <df name="stitching">
                    <df name="detail">
                      <in>autocalib.hpp</in>
                      <in>blenders.hpp</in>
                      <in>camera.hpp</in>
                      <in>exposure_compensate.hpp</in>
                      <in>matchers.hpp</in>
                      <in>motion_estimators.hpp</in>
                      <in>seam_finders.hpp</in>
                      <in>util.hpp</in>
                      <in>util_inl.hpp</in>
                      <in>warpers.hpp</in>
                      <in>warpers_inl.hpp</in>
                    </df>
                    <in>warpers.hpp</in>
                  </df>
                  <df name="video">
                    <in>background_segm.hpp</in>
                    <in>tracking.hpp</in>
                    <in>video.hpp</in>
                  </df>
                  <df name="videostab">
                    <in>deblurring.hpp</in>
                    <in>fast_marching.hpp</in>
                    <in>fast_marching_inl.hpp</in>
                    <in>frame_source.hpp</in>
                    <in>global_motion.hpp</in>
                    <in>inpainting.hpp</in>
                    <in>log.hpp</in>
                    <in>motion_core.hpp</in>
                    <in>motion_stabilizing.hpp</in>
                    <in>optical_flow.hpp</in>
                    <in>outlier_rejection.hpp</in>
                    <in>ring_buffer.hpp</in>
                    <in>stabilizer.hpp</in>
                    <in>wobble_suppression.hpp</in>
                  </df>
                  <in>opencv.hpp</in>
                  <in>opencv_modules.hpp</in>
                </df>
              </df>
              <df name="lib">
                <df name="pkgconfig">
                </df>
              </df>
              <df name="share">
                <df name="OpenCV">
                  <df name="haarcascades">
                  </df>
                  <df name="lbpcascades">
                  </df>
                </df>
              </df>
            </df>
            <df name="junk">
            </df>
            <df name="lib">
              <df name="Release">
              </df>
            </df>
            <df name="modules">
              <df name="androidcamera">
              </df>
              <df name="calib3d">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_calib3d.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_calib3d.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="CMakeFiles">
              </df>
              <df name="contrib">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_contrib.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_contrib.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="core">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_core.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_core.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="features2d">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_features2d.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_features2d.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="flann">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_flann.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_flann.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="gpu">
              </df>
              <df name="highgui">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_highgui.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_highgui.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="imgproc">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_imgproc.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_imgproc.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="java">
              </df>
              <df name="legacy">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_legacy.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_legacy.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="ml">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_ml.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_ml.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="nonfree">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_nonfree.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_nonfree.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="objdetect">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_objdetect.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_objdetect.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="ocl">
              </df>
              <df name="photo">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_photo.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_photo.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="python">
              </df>
              <df name="softcascade">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_softcascade.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_softcascade.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="stitching">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_stitching.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_stitching.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="ts">
              </df>
              <df name="video">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_video.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_video.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="videostab">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_videostab.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_videostab.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
              <df name="world">
                <df name="CMakeFiles">
                </df>
                <df name="CMakeScripts">
                </df>
                <df name="OpenCV.build">
                  <df name="Release-iphonesimulator">
                    <df name="opencv_world.build">
                      <df name="Objects-normal">
                        <df name="i386">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <df name="opencv_world.xcodeproj">
                </df>
                <df name="UninstalledProducts">
                </df>
              </df>
            </df>
            <df name="OpenCV.build">
              <df name="Release-iphonesimulator">
                <df name="ALL_BUILD.build">
                </df>
                <df name="install.build">
                </df>
                <df name="ZERO_CHECK.build">
                </df>
              </df>
            </df>
            <df name="OpenCV.xcodeproj">
            </df>
            <df name="opencv2">
              <in>opencv_modules.hpp</in>
            </df>
            <df name="unix-install">
            </df>
            <in>cvconfig.h</in>
          </df>
        </df>
        <df name="opencv2.framework">
          <df name="Headers">
            <df name="calib3d">
              <in>calib3d.hpp</in>
            </df>
            <df name="contrib">
              <in>contrib.hpp</in>
              <in>detection_based_tracker.hpp</in>
              <in>hybridtracker.hpp</in>
              <in>openfabmap.hpp</in>
              <in>retina.hpp</in>
            </df>
            <df name="core">
              <in>core.hpp</in>
              <in>core_c.h</in>
              <in>cuda_devptrs.hpp</in>
              <in>eigen.hpp</in>
              <in>gpumat.hpp</in>
              <in>internal.hpp</in>
              <in>mat.hpp</in>
              <in>opengl.hpp</in>
              <in>operations.hpp</in>
              <in>stream_accessor.hpp</in>
              <in>types_c.h</in>
              <in>version.hpp</in>
              <in>wimage.hpp</in>
            </df>
            <df name="features2d">
              <in>features2d.hpp</in>
            </df>
            <df name="flann">
              <in>all_indices.h</in>
              <in>allocator.h</in>
              <in>any.h</in>
              <in>autotuned_index.h</in>
              <in>composite_index.h</in>
              <in>config.h</in>
              <in>defines.h</in>
              <in>dist.h</in>
              <in>dummy.h</in>
              <in>dynamic_bitset.h</in>
              <in>flann.hpp</in>
              <in>flann_base.hpp</in>
              <in>general.h</in>
              <in>ground_truth.h</in>
              <in>hdf5.h</in>
              <in>heap.h</in>
              <in>hierarchical_clustering_index.h</in>
              <in>index_testing.h</in>
              <in>kdtree_index.h</in>
              <in>kdtree_single_index.h</in>
              <in>kmeans_index.h</in>
              <in>linear_index.h</in>
              <in>logger.h</in>
              <in>lsh_index.h</in>
              <in>lsh_table.h</in>
              <in>matrix.h</in>
              <in>miniflann.hpp</in>
              <in>nn_index.h</in>
              <in>object_factory.h</in>
              <in>params.h</in>
              <in>random.h</in>
              <in>result_set.h</in>
              <in>sampling.h</in>
              <in>saving.h</in>
              <in>simplex_downhill.h</in>
              <in>timer.h</in>
            </df>
            <df name="highgui">
              <in>cap_ios.h</in>
              <in>highgui.hpp</in>
              <in>highgui_c.h</in>
            </df>
            <df name="imgproc">
              <in>imgproc.hpp</in>
              <in>imgproc_c.h</in>
              <in>types_c.h</in>
            </df>
            <df name="legacy">
              <in>blobtrack.hpp</in>
              <in>compat.hpp</in>
              <in>legacy.hpp</in>
              <in>streams.hpp</in>
            </df>
            <df name="ml">
              <in>ml.hpp</in>
            </df>
            <df name="nonfree">
              <in>features2d.hpp</in>
              <in>nonfree.hpp</in>
            </df>
            <df name="objdetect">
              <in>objdetect.hpp</in>
            </df>
            <df name="photo">
              <in>photo.hpp</in>
              <in>photo_c.h</in>
            </df>
            <df name="stitching">
              <df name="detail">
                <in>autocalib.hpp</in>
                <in>blenders.hpp</in>
                <in>camera.hpp</in>
                <in>exposure_compensate.hpp</in>
                <in>matchers.hpp</in>
                <in>motion_estimators.hpp</in>
                <in>seam_finders.hpp</in>
                <in>util.hpp</in>
                <in>util_inl.hpp</in>
                <in>warpers.hpp</in>
                <in>warpers_inl.hpp</in>
              </df>
              <in>warpers.hpp</in>
            </df>
            <df name="video">
              <in>background_segm.hpp</in>
              <in>tracking.hpp</in>
              <in>video.hpp</in>
            </df>
            <df name="videostab">
              <in>deblurring.hpp</in>
              <in>fast_marching.hpp</in>
              <in>fast_marching_inl.hpp</in>
              <in>frame_source.hpp</in>
              <in>global_motion.hpp</in>
              <in>inpainting.hpp</in>
              <in>log.hpp</in>
              <in>motion_core.hpp</in>
              <in>motion_stabilizing.hpp</in>
              <in>optical_flow.hpp</in>
              <in>outlier_rejection.hpp</in>
              <in>ring_buffer.hpp</in>
              <in>stabilizer.hpp</in>
              <in>wobble_suppression.hpp</in>
            </df>
            <in>calib3d.hpp</in>
            <in>contrib.hpp</in>
            <in>core.hpp</in>
            <in>features2d.hpp</in>
            <in>highgui.hpp</in>
            <in>imgproc.hpp</in>
            <in>ml.hpp</in>
            <in>objdetect.hpp</in>
            <in>opencv.hpp</in>
            <in>opencv_modules.hpp</in>
            <in>photo.hpp</in>
            <in>video.hpp</in>
          </df>
          <df name="Resources">
          </df>
          <df name="Versions">
            <df name="A">
              <df name="Headers">
                <df name="calib3d">
                  <in>calib3d.hpp</in>
                </df>
                <df name="contrib">
                  <in>contrib.hpp</in>
                  <in>detection_based_tracker.hpp</in>
                  <in>hybridtracker.hpp</in>
                  <in>openfabmap.hpp</in>
                  <in>retina.hpp</in>
                </df>
                <df name="core">
                  <in>core.hpp</in>
                  <in>core_c.h</in>
                  <in>cuda_devptrs.hpp</in>
                  <in>eigen.hpp</in>
                  <in>gpumat.hpp</in>
                  <in>internal.hpp</in>
                  <in>mat.hpp</in>
                  <in>opengl.hpp</in>
                  <in>operations.hpp</in>
                  <in>stream_accessor.hpp</in>
                  <in>types_c.h</in>
                  <in>version.hpp</in>
                  <in>wimage.hpp</in>
                </df>
                <df name="features2d">
                  <in>features2d.hpp</in>
                </df>
                <df name="flann">
                  <in>all_indices.h</in>
                  <in>allocator.h</in>
                  <in>any.h</in>
                  <in>autotuned_index.h</in>
                  <in>composite_index.h</in>
                  <in>config.h</in>
                  <in>defines.h</in>
                  <in>dist.h</in>
                  <in>dummy.h</in>
                  <in>dynamic_bitset.h</in>
                  <in>flann.hpp</in>
                  <in>flann_base.hpp</in>
                  <in>general.h</in>
                  <in>ground_truth.h</in>
                  <in>hdf5.h</in>
                  <in>heap.h</in>
                  <in>hierarchical_clustering_index.h</in>
                  <in>index_testing.h</in>
                  <in>kdtree_index.h</in>
                  <in>kdtree_single_index.h</in>
                  <in>kmeans_index.h</in>
                  <in>linear_index.h</in>
                  <in>logger.h</in>
                  <in>lsh_index.h</in>
                  <in>lsh_table.h</in>
                  <in>matrix.h</in>
                  <in>miniflann.hpp</in>
                  <in>nn_index.h</in>
                  <in>object_factory.h</in>
                  <in>params.h</in>
                  <in>random.h</in>
                  <in>result_set.h</in>
                  <in>sampling.h</in>
                  <in>saving.h</in>
                  <in>simplex_downhill.h</in>
                  <in>timer.h</in>
                </df>
                <df name="highgui">
                  <in>cap_ios.h</in>
                  <in>highgui.hpp</in>
                  <in>highgui_c.h</in>
                </df>
                <df name="imgproc">
                  <in>imgproc.hpp</in>
                  <in>imgproc_c.h</in>
                  <in>types_c.h</in>
                </df>
                <df name="legacy">
                  <in>blobtrack.hpp</in>
                  <in>compat.hpp</in>
                  <in>legacy.hpp</in>
                  <in>streams.hpp</in>
                </df>
                <df name="ml">
                  <in>ml.hpp</in>
                </df>
                <df name="nonfree">
                  <in>features2d.hpp</in>
                  <in>nonfree.hpp</in>
                </df>
                <df name="objdetect">
                  <in>objdetect.hpp</in>
                </df>
                <df name="photo">
                  <in>photo.hpp</in>
                  <in>photo_c.h</in>
                </df>
                <df name="stitching">
                  <df name="detail">
                    <in>autocalib.hpp</in>
                    <in>blenders.hpp</in>
                    <in>camera.hpp</in>
                    <in>exposure_compensate.hpp</in>
                    <in>matchers.hpp</in>
                    <in>motion_estimators.hpp</in>
                    <in>seam_finders.hpp</in>
                    <in>util.hpp</in>
                    <in>util_inl.hpp</in>
                    <in>warpers.hpp</in>
                    <in>warpers_inl.hpp</in>
                  </df>
                  <in>warpers.hpp</in>
                </df>
                <df name="video">
                  <in>background_segm.hpp</in>
                  <in>tracking.hpp</in>
                  <in>video.hpp</in>
                </df>
                <df name="videostab">
                  <in>deblurring.hpp</in>
                  <in>fast_marching.hpp</in>
                  <in>fast_marching_inl.hpp</in>
                  <in>frame_source.hpp</in>
                  <in>global_motion.hpp</in>
                  <in>inpainting.hpp</in>
                  <in>log.hpp</in>
                  <in>motion_core.hpp</in>
                  <in>motion_stabilizing.hpp</in>
                  <in>optical_flow.hpp</in>
                  <in>outlier_rejection.hpp</in>
                  <in>ring_buffer.hpp</in>
                  <in>stabilizer.hpp</in>
                  <in>wobble_suppression.hpp</in>
                </df>
                <in>calib3d.hpp</in>
                <in>contrib.hpp</in>
                <in>core.hpp</in>
                <in>features2d.hpp</in>
                <in>highgui.hpp</in>
                <in>imgproc.hpp</in>
                <in>ml.hpp</in>
                <in>objdetect.hpp</in>
                <in>opencv.hpp</in>
                <in>opencv_modules.hpp</in>
                <in>photo.hpp</in>
                <in>video.hpp</in>
              </df>
              <df name="Resources">
              </df>
            </df>
            <df name="Current">
              <df name="Headers">
                <df name="calib3d">
                  <in>calib3d.hpp</in>
                </df>
                <df name="contrib">
                  <in>contrib.hpp</in>
                  <in>detection_based_tracker.hpp</in>
                  <in>hybridtracker.hpp</in>
                  <in>openfabmap.hpp</in>
                  <in>retina.hpp</in>
                </df>
                <df name="core">
                  <in>core.hpp</in>
                  <in>core_c.h</in>
                  <in>cuda_devptrs.hpp</in>
                  <in>eigen.hpp</in>
                  <in>gpumat.hpp</in>
                  <in>internal.hpp</in>
                  <in>mat.hpp</in>
                  <in>opengl.hpp</in>
                  <in>operations.hpp</in>
                  <in>stream_accessor.hpp</in>
                  <in>types_c.h</in>
                  <in>version.hpp</in>
                  <in>wimage.hpp</in>
                </df>
                <df name="features2d">
                  <in>features2d.hpp</in>
                </df>
                <df name="flann">
                  <in>all_indices.h</in>
                  <in>allocator.h</in>
                  <in>any.h</in>
                  <in>autotuned_index.h</in>
                  <in>composite_index.h</in>
                  <in>config.h</in>
                  <in>defines.h</in>
                  <in>dist.h</in>
                  <in>dummy.h</in>
                  <in>dynamic_bitset.h</in>
                  <in>flann.hpp</in>
                  <in>flann_base.hpp</in>
                  <in>general.h</in>
                  <in>ground_truth.h</in>
                  <in>hdf5.h</in>
                  <in>heap.h</in>
                  <in>hierarchical_clustering_index.h</in>
                  <in>index_testing.h</in>
                  <in>kdtree_index.h</in>
                  <in>kdtree_single_index.h</in>
                  <in>kmeans_index.h</in>
                  <in>linear_index.h</in>
                  <in>logger.h</in>
                  <in>lsh_index.h</in>
                  <in>lsh_table.h</in>
                  <in>matrix.h</in>
                  <in>miniflann.hpp</in>
                  <in>nn_index.h</in>
                  <in>object_factory.h</in>
                  <in>params.h</in>
                  <in>random.h</in>
                  <in>result_set.h</in>
                  <in>sampling.h</in>
                  <in>saving.h</in>
                  <in>simplex_downhill.h</in>
                  <in>timer.h</in>
                </df>
                <df name="highgui">
                  <in>cap_ios.h</in>
                  <in>highgui.hpp</in>
                  <in>highgui_c.h</in>
                </df>
                <df name="imgproc">
                  <in>imgproc.hpp</in>
                  <in>imgproc_c.h</in>
                  <in>types_c.h</in>
                </df>
                <df name="legacy">
                  <in>blobtrack.hpp</in>
                  <in>compat.hpp</in>
                  <in>legacy.hpp</in>
                  <in>streams.hpp</in>
                </df>
                <df name="ml">
                  <in>ml.hpp</in>
                </df>
                <df name="nonfree">
                  <in>features2d.hpp</in>
                  <in>nonfree.hpp</in>
                </df>
                <df name="objdetect">
                  <in>objdetect.hpp</in>
                </df>
                <df name="photo">
                  <in>photo.hpp</in>
                  <in>photo_c.h</in>
                </df>
                <df name="stitching">
                  <df name="detail">
                    <in>autocalib.hpp</in>
                    <in>blenders.hpp</in>
                    <in>camera.hpp</in>
                    <in>exposure_compensate.hpp</in>
                    <in>matchers.hpp</in>
                    <in>motion_estimators.hpp</in>
                    <in>seam_finders.hpp</in>
                    <in>util.hpp</in>
                    <in>util_inl.hpp</in>
                    <in>warpers.hpp</in>
                    <in>warpers_inl.hpp</in>
                  </df>
                  <in>warpers.hpp</in>
                </df>
                <df name="video">
                  <in>background_segm.hpp</in>
                  <in>tracking.hpp</in>
                  <in>video.hpp</in>
                </df>
                <df name="videostab">
                  <in>deblurring.hpp</in>
                  <in>fast_marching.hpp</in>
                  <in>fast_marching_inl.hpp</in>
                  <in>frame_source.hpp</in>
                  <in>global_motion.hpp</in>
                  <in>inpainting.hpp</in>
                  <in>log.hpp</in>
                  <in>motion_core.hpp</in>
                  <in>motion_stabilizing.hpp</in>
                  <in>optical_flow.hpp</in>
                  <in>outlier_rejection.hpp</in>
                  <in>ring_buffer.hpp</in>
                  <in>stabilizer.hpp</in>
                  <in>wobble_suppression.hpp</in>
                </df>
                <in>calib3d.hpp</in>
                <in>contrib.hpp</in>
                <in>core.hpp</in>
                <in>features2d.hpp</in>
                <in>highgui.hpp</in>
                <in>imgproc.hpp</in>
                <in>ml.hpp</in>
                <in>objdetect.hpp</in>
                <in>opencv.hpp</in>
                <in>opencv_modules.hpp</in>
                <in>photo.hpp</in>
                <in>video.hpp</in>
              </df>
            </df>
          </df>
        </df>
      </df>
    </df>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>4</platform>
      </toolsSet>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
